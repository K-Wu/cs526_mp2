; ModuleID = '<stdin>'
source_filename = "<stdin>"
target triple = "x86_64-unknown"

define <8 x i32> @add_sub_v8i32(<8 x i32> %a, <8 x i32> %b) #0 {
  %1 = add <8 x i32> %a, %b
  %2 = sub <8 x i32> %a, %b
  %r7 = shufflevector <8 x i32> %1, <8 x i32> %2, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 12, i32 13, i32 14, i32 15>
  ret <8 x i32> %r7
}

define <4 x i32> @add_and_v4i32(<4 x i32> %a, <4 x i32> %b) #0 {
  %1 = add <4 x i32> %a, %b
  %2 = and <4 x i32> %a, %b
  %r3 = shufflevector <4 x i32> %1, <4 x i32> %2, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  ret <4 x i32> %r3
}

define <4 x i32> @add_mul_v4i32(<4 x i32> %a, <4 x i32> %b) #0 {
  %1 = mul <4 x i32> %a, %b
  %2 = add <4 x i32> %a, %b
  %r3 = shufflevector <4 x i32> %2, <4 x i32> %1, <4 x i32> <i32 4, i32 1, i32 2, i32 7>
  ret <4 x i32> %r3
}

define <8 x i32> @ashr_shl_v8i32(<8 x i32> %a, <8 x i32> %b) #0 {
  %1 = ashr <8 x i32> %a, %b
  %2 = shl <8 x i32> %a, %b
  %r7 = shufflevector <8 x i32> %1, <8 x i32> %2, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 12, i32 13, i32 14, i32 15>
  ret <8 x i32> %r7
}

define <8 x i32> @ashr_shl_v8i32_const(<8 x i32> %a) #0 {
  %1 = ashr <8 x i32> %a, <i32 2, i32 2, i32 2, i32 2, i32 3, i32 3, i32 3, i32 3>
  %2 = shl <8 x i32> %a, <i32 2, i32 2, i32 2, i32 2, i32 3, i32 3, i32 3, i32 3>
  %r7 = shufflevector <8 x i32> %1, <8 x i32> %2, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 12, i32 13, i32 14, i32 15>
  ret <8 x i32> %r7
}

define <8 x i32> @ashr_lshr_shl_v8i32(<8 x i32> %a, <8 x i32> %b) #0 {
  %a6 = extractelement <8 x i32> %a, i32 6
  %a7 = extractelement <8 x i32> %a, i32 7
  %b6 = extractelement <8 x i32> %b, i32 6
  %b7 = extractelement <8 x i32> %b, i32 7
  %1 = shufflevector <8 x i32> %a, <8 x i32> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %2 = shufflevector <8 x i32> %b, <8 x i32> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %3 = ashr <4 x i32> %1, %2
  %4 = lshr <4 x i32> %1, %2
  %5 = lshr <8 x i32> %a, %b
  %ab6 = shl i32 %a6, %b6
  %ab7 = shl i32 %a7, %b7
  %6 = extractelement <4 x i32> %3, i32 0
  %r0 = insertelement <8 x i32> undef, i32 %6, i32 0
  %7 = extractelement <4 x i32> %3, i32 1
  %r1 = insertelement <8 x i32> %r0, i32 %7, i32 1
  %8 = extractelement <4 x i32> %4, i32 2
  %r2 = insertelement <8 x i32> %r1, i32 %8, i32 2
  %9 = extractelement <4 x i32> %4, i32 3
  %r3 = insertelement <8 x i32> %r2, i32 %9, i32 3
  %10 = extractelement <8 x i32> %5, i32 4
  %r4 = insertelement <8 x i32> %r3, i32 %10, i32 4
  %11 = extractelement <8 x i32> %5, i32 5
  %r5 = insertelement <8 x i32> %r4, i32 %11, i32 5
  %r6 = insertelement <8 x i32> %r5, i32 %ab6, i32 6
  %r7 = insertelement <8 x i32> %r6, i32 %ab7, i32 7
  ret <8 x i32> %r7
}

define <8 x i32> @add_v8i32_undefs(<8 x i32> %a) #0 {
  %1 = add <8 x i32> %a, <i32 undef, i32 4, i32 8, i32 16, i32 undef, i32 4, i32 8, i32 16>
  ret <8 x i32> %1
}

define <8 x i32> @sdiv_v8i32_undefs(<8 x i32> %a) #0 {
  %a1 = extractelement <8 x i32> %a, i32 1
  %a2 = extractelement <8 x i32> %a, i32 2
  %a3 = extractelement <8 x i32> %a, i32 3
  %a5 = extractelement <8 x i32> %a, i32 5
  %a6 = extractelement <8 x i32> %a, i32 6
  %a7 = extractelement <8 x i32> %a, i32 7
  %ab1 = sdiv i32 %a1, 4
  %ab2 = sdiv i32 %a2, 8
  %ab3 = sdiv i32 %a3, 16
  %ab5 = sdiv i32 %a5, 4
  %ab6 = sdiv i32 %a6, 8
  %ab7 = sdiv i32 %a7, 16
  %r1 = insertelement <8 x i32> undef, i32 %ab1, i32 1
  %r2 = insertelement <8 x i32> %r1, i32 %ab2, i32 2
  %r3 = insertelement <8 x i32> %r2, i32 %ab3, i32 3
  %r5 = insertelement <8 x i32> %r3, i32 %ab5, i32 5
  %r6 = insertelement <8 x i32> %r5, i32 %ab6, i32 6
  %r7 = insertelement <8 x i32> %r6, i32 %ab7, i32 7
  ret <8 x i32> %r7
}

define <8 x i32> @add_sub_v8i32_splat(<8 x i32> %a, i32 %b) #0 {
  %1 = insertelement <4 x i32> undef, i32 %b, i32 0
  %2 = shufflevector <4 x i32> %1, <4 x i32> undef, <4 x i32> zeroinitializer
  %3 = shufflevector <8 x i32> %a, <8 x i32> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %4 = add <4 x i32> %2, %3
  %5 = shufflevector <8 x i32> %a, <8 x i32> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %6 = sub <4 x i32> %2, %5
  %r7 = shufflevector <4 x i32> %4, <4 x i32> %6, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  ret <8 x i32> %r7
}

attributes #0 = { "target-cpu"="core-avx2" }
