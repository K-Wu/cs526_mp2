; ModuleID = '<stdin>'
source_filename = "<stdin>"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

define void @hoge() #0 {
bb:
  br i1 undef, label %bb1, label %bb2

bb1:                                              ; preds = %bb
  ret void

bb2:                                              ; preds = %bb
  %t = select i1 undef, i16 undef, i16 15
  %0 = insertelement <2 x i16> undef, i16 %t, i32 0
  %1 = insertelement <2 x i16> %0, i16 undef, i32 1
  %2 = sext <2 x i16> %1 to <2 x i32>
  %reorder_shuffle = shufflevector <2 x i32> %2, <2 x i32> undef, <2 x i32> <i32 1, i32 0>
  %3 = sub nsw <2 x i32> <i32 63, i32 undef>, %reorder_shuffle
  %4 = sub <2 x i32> %3, undef
  %shuffle8 = shufflevector <2 x i32> %4, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 1, i32 1>
  %5 = add <4 x i32> <i32 undef, i32 15, i32 31, i32 47>, %shuffle8
  %t11 = icmp sgt i32 undef, undef
  %t12 = select i1 %t11, i32 undef, i32 undef
  %t14 = icmp sgt i32 %t12, undef
  %t15 = select i1 %t14, i32 %t12, i32 undef
  %t17 = icmp sgt i32 %t15, undef
  %rdx.shuf9 = shufflevector <4 x i32> %5, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %rdx.minmax.cmp10 = icmp sgt <4 x i32> %5, %rdx.shuf9
  %rdx.minmax.select11 = select <4 x i1> %rdx.minmax.cmp10, <4 x i32> %5, <4 x i32> %rdx.shuf9
  %rdx.shuf12 = shufflevector <4 x i32> %rdx.minmax.select11, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %rdx.minmax.cmp13 = icmp sgt <4 x i32> %rdx.minmax.select11, %rdx.shuf12
  %rdx.minmax.select14 = select <4 x i1> %rdx.minmax.cmp13, <4 x i32> %rdx.minmax.select11, <4 x i32> %rdx.shuf12
  %6 = extractelement <4 x i32> %rdx.minmax.select14, i32 0
  %t18 = select i1 %t17, i32 %t15, i32 undef
  %t19 = select i1 undef, i32 %6, i32 undef
  %t20 = icmp sgt i32 %t19, 63
  %7 = sub nsw <2 x i32> undef, %2
  %8 = sub <2 x i32> %7, undef
  %shuffle = shufflevector <2 x i32> %8, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %9 = add nsw <4 x i32> <i32 -49, i32 -33, i32 -33, i32 -17>, %shuffle
  %t26 = icmp sgt i32 undef, undef
  %t27 = select i1 %t26, i32 undef, i32 undef
  %t28 = icmp sgt i32 %t27, undef
  %t29 = select i1 %t28, i32 undef, i32 %t27
  %t31 = icmp sgt i32 undef, undef
  %t32 = select i1 %t31, i32 undef, i32 undef
  %t33 = icmp sgt i32 %t32, %t29
  %t34 = select i1 %t33, i32 %t29, i32 %t32
  %t36 = icmp sgt i32 undef, undef
  %t37 = select i1 %t36, i32 undef, i32 undef
  %t38 = icmp sgt i32 %t37, %t34
  %t39 = select i1 %t38, i32 %t34, i32 %t37
  %t41 = icmp sgt i32 undef, undef
  %t42 = select i1 %t41, i32 undef, i32 undef
  %t43 = icmp sgt i32 %t42, %t39
  %rdx.shuf = shufflevector <4 x i32> %9, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %rdx.minmax.cmp = icmp slt <4 x i32> %9, %rdx.shuf
  %rdx.minmax.select = select <4 x i1> %rdx.minmax.cmp, <4 x i32> %9, <4 x i32> %rdx.shuf
  %rdx.shuf1 = shufflevector <4 x i32> %rdx.minmax.select, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %rdx.minmax.cmp2 = icmp slt <4 x i32> %rdx.minmax.select, %rdx.shuf1
  %rdx.minmax.select3 = select <4 x i1> %rdx.minmax.cmp2, <4 x i32> %rdx.minmax.select, <4 x i32> %rdx.shuf1
  %10 = extractelement <4 x i32> %rdx.minmax.select3, i32 0
  %11 = icmp slt i32 %10, undef
  %op.extra = select i1 %11, i32 %10, i32 undef
  %12 = icmp slt i32 %op.extra, undef
  %op.extra4 = select i1 %12, i32 %op.extra, i32 undef
  %13 = icmp slt i32 %op.extra4, undef
  %op.extra5 = select i1 %13, i32 %op.extra4, i32 undef
  %14 = icmp slt i32 %op.extra5, undef
  %op.extra6 = select i1 %14, i32 %op.extra5, i32 undef
  %15 = icmp slt i32 %op.extra6, undef
  %op.extra7 = select i1 %15, i32 %op.extra6, i32 undef
  %t44 = select i1 %t43, i32 %t39, i32 %t42
  %t45 = icmp sgt i32 undef, %op.extra7
  unreachable
}

attributes #0 = { "target-cpu"="bdver2" }
