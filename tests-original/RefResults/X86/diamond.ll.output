; ModuleID = '<stdin>'
source_filename = "<stdin>"
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.8.0"

define i32 @foo(i32* noalias nocapture %B, i32* noalias nocapture %A, i32 %n, i32 %m) #0 {
entry:
  %mul238 = add i32 %m, %n
  %arrayidx4 = getelementptr inbounds i32, i32* %A, i64 1
  %arrayidx9 = getelementptr inbounds i32, i32* %B, i64 1
  %arrayidx10 = getelementptr inbounds i32, i32* %A, i64 2
  %arrayidx15 = getelementptr inbounds i32, i32* %B, i64 2
  %arrayidx16 = getelementptr inbounds i32, i32* %A, i64 3
  %0 = bitcast i32* %A to <4 x i32>*
  %1 = load <4 x i32>, <4 x i32>* %0, align 4
  %2 = insertelement <4 x i32> undef, i32 %mul238, i32 0
  %3 = insertelement <4 x i32> %2, i32 %mul238, i32 1
  %4 = insertelement <4 x i32> %3, i32 %mul238, i32 2
  %5 = insertelement <4 x i32> %4, i32 %mul238, i32 3
  %6 = mul <4 x i32> %1, %5
  %arrayidx21 = getelementptr inbounds i32, i32* %B, i64 3
  %7 = bitcast i32* %B to <4 x i32>*
  store <4 x i32> %6, <4 x i32>* %7, align 4
  ret i32 0
}

define i32 @extr_user(i32* noalias nocapture %B, i32* noalias nocapture %A, i32 %n, i32 %m) #0 {
entry:
  %mul238 = add i32 %m, %n
  %arrayidx4 = getelementptr inbounds i32, i32* %A, i64 1
  %arrayidx9 = getelementptr inbounds i32, i32* %B, i64 1
  %arrayidx10 = getelementptr inbounds i32, i32* %A, i64 2
  %arrayidx15 = getelementptr inbounds i32, i32* %B, i64 2
  %arrayidx16 = getelementptr inbounds i32, i32* %A, i64 3
  %0 = bitcast i32* %A to <4 x i32>*
  %1 = load <4 x i32>, <4 x i32>* %0, align 4
  %2 = insertelement <4 x i32> undef, i32 %mul238, i32 0
  %3 = insertelement <4 x i32> %2, i32 %mul238, i32 1
  %4 = insertelement <4 x i32> %3, i32 %mul238, i32 2
  %5 = insertelement <4 x i32> %4, i32 %mul238, i32 3
  %6 = mul <4 x i32> %1, %5
  %arrayidx21 = getelementptr inbounds i32, i32* %B, i64 3
  %7 = bitcast i32* %B to <4 x i32>*
  store <4 x i32> %6, <4 x i32>* %7, align 4
  %8 = extractelement <4 x i32> %1, i32 0
  ret i32 %8
}

define i32 @extr_user1(i32* noalias nocapture %B, i32* noalias nocapture %A, i32 %n, i32 %m) #0 {
entry:
  %mul238 = add i32 %m, %n
  %arrayidx4 = getelementptr inbounds i32, i32* %A, i64 1
  %arrayidx9 = getelementptr inbounds i32, i32* %B, i64 1
  %arrayidx10 = getelementptr inbounds i32, i32* %A, i64 2
  %arrayidx15 = getelementptr inbounds i32, i32* %B, i64 2
  %arrayidx16 = getelementptr inbounds i32, i32* %A, i64 3
  %0 = bitcast i32* %A to <4 x i32>*
  %1 = load <4 x i32>, <4 x i32>* %0, align 4
  %2 = insertelement <4 x i32> undef, i32 %mul238, i32 0
  %3 = insertelement <4 x i32> %2, i32 %mul238, i32 1
  %4 = insertelement <4 x i32> %3, i32 %mul238, i32 2
  %5 = insertelement <4 x i32> %4, i32 %mul238, i32 3
  %6 = mul <4 x i32> %1, %5
  %arrayidx21 = getelementptr inbounds i32, i32* %B, i64 3
  %7 = bitcast i32* %B to <4 x i32>*
  store <4 x i32> %6, <4 x i32>* %7, align 4
  %8 = extractelement <4 x i32> %1, i32 1
  ret i32 %8
}

attributes #0 = { "target-cpu"="corei7-avx" }
