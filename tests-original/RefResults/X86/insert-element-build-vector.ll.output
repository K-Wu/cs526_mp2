; ModuleID = '<stdin>'
source_filename = "<stdin>"
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.8.0"

; Function Attrs: nounwind ssp uwtable
define <4 x float> @simple_select(<4 x float> %a, <4 x float> %b, <4 x i32> %c) #0 {
  %1 = icmp ne <4 x i32> %c, zeroinitializer
  %2 = select <4 x i1> %1, <4 x float> %a, <4 x float> %b
  %3 = extractelement <4 x float> %2, i32 0
  %ra = insertelement <4 x float> undef, float %3, i32 0
  %4 = extractelement <4 x float> %2, i32 1
  %rb = insertelement <4 x float> %ra, float %4, i32 1
  %5 = extractelement <4 x float> %2, i32 2
  %rc = insertelement <4 x float> %rb, float %5, i32 2
  %6 = extractelement <4 x float> %2, i32 3
  %rd = insertelement <4 x float> %rc, float %6, i32 3
  ret <4 x float> %rd
}

; Function Attrs: nounwind
declare void @llvm.assume(i1) #1

; Function Attrs: nounwind ssp uwtable
define <4 x float> @simple_select_eph(<4 x float> %a, <4 x float> %b, <4 x i32> %c) #0 {
  %c0 = extractelement <4 x i32> %c, i32 0
  %c1 = extractelement <4 x i32> %c, i32 1
  %c2 = extractelement <4 x i32> %c, i32 2
  %c3 = extractelement <4 x i32> %c, i32 3
  %a0 = extractelement <4 x float> %a, i32 0
  %a1 = extractelement <4 x float> %a, i32 1
  %a2 = extractelement <4 x float> %a, i32 2
  %a3 = extractelement <4 x float> %a, i32 3
  %b0 = extractelement <4 x float> %b, i32 0
  %b1 = extractelement <4 x float> %b, i32 1
  %b2 = extractelement <4 x float> %b, i32 2
  %b3 = extractelement <4 x float> %b, i32 3
  %cmp0 = icmp ne i32 %c0, 0
  %cmp1 = icmp ne i32 %c1, 0
  %cmp2 = icmp ne i32 %c2, 0
  %cmp3 = icmp ne i32 %c3, 0
  %s0 = select i1 %cmp0, float %a0, float %b0
  %s1 = select i1 %cmp1, float %a1, float %b1
  %s2 = select i1 %cmp2, float %a2, float %b2
  %s3 = select i1 %cmp3, float %a3, float %b3
  %ra = insertelement <4 x float> undef, float %s0, i32 0
  %rb = insertelement <4 x float> %ra, float %s1, i32 1
  %rc = insertelement <4 x float> %rb, float %s2, i32 2
  %rd = insertelement <4 x float> %rc, float %s3, i32 3
  %q0 = extractelement <4 x float> %rd, i32 0
  %q1 = extractelement <4 x float> %rd, i32 1
  %q2 = extractelement <4 x float> %rd, i32 2
  %q3 = extractelement <4 x float> %rd, i32 3
  %q4 = fadd float %q0, %q1
  %q5 = fadd float %q2, %q3
  %q6 = fadd float %q4, %q5
  %qi = fcmp olt float %q6, %q5
  call void @llvm.assume(i1 %qi)
  ret <4 x float> undef
}

; Function Attrs: nounwind ssp uwtable
define <4 x float> @simple_select_insert_out_of_order(<4 x float> %a, <4 x float> %b, <4 x i32> %c) #0 {
  %1 = icmp ne <4 x i32> %c, zeroinitializer
  %2 = select <4 x i1> %1, <4 x float> %a, <4 x float> %b
  %3 = extractelement <4 x float> %2, i32 0
  %ra = insertelement <4 x float> undef, float %3, i32 2
  %4 = extractelement <4 x float> %2, i32 1
  %rb = insertelement <4 x float> %ra, float %4, i32 1
  %5 = extractelement <4 x float> %2, i32 2
  %rc = insertelement <4 x float> %rb, float %5, i32 0
  %6 = extractelement <4 x float> %2, i32 3
  %rd = insertelement <4 x float> %rc, float %6, i32 3
  ret <4 x float> %rd
}

; Function Attrs: nounwind ssp uwtable
declare void @v4f32_user(<4 x float>) #0

; Function Attrs: nounwind ssp uwtable
declare void @f32_user(float) #0

; Function Attrs: nounwind ssp uwtable
define <4 x float> @simple_select_users(<4 x float> %a, <4 x float> %b, <4 x i32> %c) #0 {
  %1 = icmp ne <4 x i32> %c, zeroinitializer
  %2 = select <4 x i1> %1, <4 x float> %a, <4 x float> %b
  %3 = extractelement <4 x float> %2, i32 0
  %ra = insertelement <4 x float> undef, float %3, i32 0
  %4 = extractelement <4 x float> %2, i32 1
  %rb = insertelement <4 x float> %ra, float %4, i32 1
  %5 = extractelement <4 x float> %2, i32 2
  %rc = insertelement <4 x float> %rb, float %5, i32 2
  %6 = extractelement <4 x float> %2, i32 3
  %rd = insertelement <4 x float> %rc, float %6, i32 3
  call void @v4f32_user(<4 x float> %rd) #0
  ret <4 x float> %rd
}

; Function Attrs: nounwind ssp uwtable
define <4 x float> @simple_select_no_users(<4 x float> %a, <4 x float> %b, <4 x i32> %c) #0 {
  %c0 = extractelement <4 x i32> %c, i32 0
  %c1 = extractelement <4 x i32> %c, i32 1
  %c2 = extractelement <4 x i32> %c, i32 2
  %c3 = extractelement <4 x i32> %c, i32 3
  %a0 = extractelement <4 x float> %a, i32 0
  %a1 = extractelement <4 x float> %a, i32 1
  %a2 = extractelement <4 x float> %a, i32 2
  %a3 = extractelement <4 x float> %a, i32 3
  %b0 = extractelement <4 x float> %b, i32 0
  %b1 = extractelement <4 x float> %b, i32 1
  %b2 = extractelement <4 x float> %b, i32 2
  %b3 = extractelement <4 x float> %b, i32 3
  %1 = insertelement <2 x i32> undef, i32 %c0, i32 0
  %2 = insertelement <2 x i32> %1, i32 %c1, i32 1
  %3 = icmp ne <2 x i32> %2, zeroinitializer
  %4 = insertelement <2 x i32> undef, i32 %c2, i32 0
  %5 = insertelement <2 x i32> %4, i32 %c3, i32 1
  %6 = icmp ne <2 x i32> %5, zeroinitializer
  %7 = insertelement <2 x float> undef, float %a0, i32 0
  %8 = insertelement <2 x float> %7, float %a1, i32 1
  %9 = insertelement <2 x float> undef, float %b0, i32 0
  %10 = insertelement <2 x float> %9, float %b1, i32 1
  %11 = select <2 x i1> %3, <2 x float> %8, <2 x float> %10
  %12 = insertelement <2 x float> undef, float %a2, i32 0
  %13 = insertelement <2 x float> %12, float %a3, i32 1
  %14 = insertelement <2 x float> undef, float %b2, i32 0
  %15 = insertelement <2 x float> %14, float %b3, i32 1
  %16 = select <2 x i1> %6, <2 x float> %13, <2 x float> %15
  %17 = extractelement <2 x float> %11, i32 0
  %ra = insertelement <4 x float> undef, float %17, i32 0
  %18 = extractelement <2 x float> %11, i32 1
  %rb = insertelement <4 x float> %ra, float %18, i32 1
  %19 = extractelement <2 x float> %16, i32 0
  %rc = insertelement <4 x float> undef, float %19, i32 2
  %20 = extractelement <2 x float> %16, i32 1
  %rd = insertelement <4 x float> %rc, float %20, i32 3
  ret <4 x float> %rd
}

; Function Attrs: nounwind ssp uwtable
define <4 x i32> @reconstruct(<4 x i32> %c) #0 {
  %c0 = extractelement <4 x i32> %c, i32 0
  %c1 = extractelement <4 x i32> %c, i32 1
  %c2 = extractelement <4 x i32> %c, i32 2
  %c3 = extractelement <4 x i32> %c, i32 3
  %ra = insertelement <4 x i32> undef, i32 %c0, i32 0
  %rb = insertelement <4 x i32> %ra, i32 %c1, i32 1
  %rc = insertelement <4 x i32> %rb, i32 %c2, i32 2
  %rd = insertelement <4 x i32> %rc, i32 %c3, i32 3
  ret <4 x i32> %rd
}

; Function Attrs: nounwind ssp uwtable
define <2 x float> @simple_select_v2(<2 x float> %a, <2 x float> %b, <2 x i32> %c) #0 {
  %1 = icmp ne <2 x i32> %c, zeroinitializer
  %2 = select <2 x i1> %1, <2 x float> %a, <2 x float> %b
  %3 = extractelement <2 x float> %2, i32 0
  %ra = insertelement <2 x float> undef, float %3, i32 0
  %4 = extractelement <2 x float> %2, i32 1
  %rb = insertelement <2 x float> %ra, float %4, i32 1
  ret <2 x float> %rb
}

; Function Attrs: nounwind ssp uwtable
define <4 x float> @simple_select_partial_vector(<4 x float> %a, <4 x float> %b, <4 x i32> %c) #0 {
  %c0 = extractelement <4 x i32> %c, i32 0
  %c1 = extractelement <4 x i32> %c, i32 1
  %a0 = extractelement <4 x float> %a, i32 0
  %a1 = extractelement <4 x float> %a, i32 1
  %b0 = extractelement <4 x float> %b, i32 0
  %b1 = extractelement <4 x float> %b, i32 1
  %1 = insertelement <2 x i32> undef, i32 %c0, i32 0
  %2 = insertelement <2 x i32> %1, i32 %c1, i32 1
  %3 = icmp ne <2 x i32> %2, zeroinitializer
  %4 = insertelement <2 x float> undef, float %a0, i32 0
  %5 = insertelement <2 x float> %4, float %a1, i32 1
  %6 = insertelement <2 x float> undef, float %b0, i32 0
  %7 = insertelement <2 x float> %6, float %b1, i32 1
  %8 = select <2 x i1> %3, <2 x float> %5, <2 x float> %7
  %9 = extractelement <2 x float> %8, i32 0
  %ra = insertelement <4 x float> undef, float %9, i32 0
  %10 = extractelement <2 x float> %8, i32 1
  %rb = insertelement <4 x float> %ra, float %10, i32 1
  ret <4 x float> %rb
}

define <4 x float> @reschedule_extract(<4 x float> %a, <4 x float> %b) {
  %1 = fadd <4 x float> %a, %b
  %2 = extractelement <4 x float> %1, i32 0
  %v0 = insertelement <4 x float> undef, float %2, i32 0
  %3 = extractelement <4 x float> %1, i32 1
  %v1 = insertelement <4 x float> %v0, float %3, i32 1
  %4 = extractelement <4 x float> %1, i32 2
  %v2 = insertelement <4 x float> %v1, float %4, i32 2
  %5 = extractelement <4 x float> %1, i32 3
  %v3 = insertelement <4 x float> %v2, float %5, i32 3
  ret <4 x float> %v3
}

define <4 x float> @take_credit(<4 x float> %a, <4 x float> %b) {
  %1 = fadd <4 x float> %a, %b
  %2 = extractelement <4 x float> %1, i32 0
  %v0 = insertelement <4 x float> undef, float %2, i32 0
  %3 = extractelement <4 x float> %1, i32 1
  %v1 = insertelement <4 x float> %v0, float %3, i32 1
  %4 = extractelement <4 x float> %1, i32 2
  %v2 = insertelement <4 x float> %v1, float %4, i32 2
  %5 = extractelement <4 x float> %1, i32 3
  %v3 = insertelement <4 x float> %v2, float %5, i32 3
  ret <4 x float> %v3
}

define <4 x double> @multi_tree(double %w, double %x, double %y, double %z) {
  %1 = insertelement <4 x double> undef, double %w, i32 0
  %2 = insertelement <4 x double> %1, double %x, i32 1
  %3 = insertelement <4 x double> %2, double %y, i32 2
  %4 = insertelement <4 x double> %3, double %z, i32 3
  %5 = fadd <4 x double> %4, <double 0.000000e+00, double 1.000000e+00, double 2.000000e+00, double 3.000000e+00>
  %6 = fmul <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %5
  %7 = extractelement <4 x double> %6, i32 0
  %i1 = insertelement <4 x double> undef, double %7, i32 3
  %8 = extractelement <4 x double> %6, i32 1
  %i2 = insertelement <4 x double> %i1, double %8, i32 2
  %9 = extractelement <4 x double> %6, i32 2
  %i3 = insertelement <4 x double> %i2, double %9, i32 1
  %10 = extractelement <4 x double> %6, i32 3
  %i4 = insertelement <4 x double> %i3, double %10, i32 0
  ret <4 x double> %i4
}

; Function Attrs: nounwind ssp uwtable
define <8 x float> @_vadd256(<8 x float> %a, <8 x float> %b) local_unnamed_addr #0 {
  %1 = fadd <8 x float> %a, %b
  %2 = extractelement <8 x float> %1, i32 0
  %vecinit.i = insertelement <8 x float> undef, float %2, i32 0
  %3 = extractelement <8 x float> %1, i32 1
  %vecinit1.i = insertelement <8 x float> %vecinit.i, float %3, i32 1
  %4 = extractelement <8 x float> %1, i32 2
  %vecinit2.i = insertelement <8 x float> %vecinit1.i, float %4, i32 2
  %5 = extractelement <8 x float> %1, i32 3
  %vecinit3.i = insertelement <8 x float> %vecinit2.i, float %5, i32 3
  %6 = extractelement <8 x float> %1, i32 4
  %vecinit4.i = insertelement <8 x float> %vecinit3.i, float %6, i32 4
  %7 = extractelement <8 x float> %1, i32 5
  %vecinit5.i = insertelement <8 x float> %vecinit4.i, float %7, i32 5
  %8 = extractelement <8 x float> %1, i32 6
  %vecinit6.i = insertelement <8 x float> %vecinit5.i, float %8, i32 6
  %9 = extractelement <8 x float> %1, i32 7
  %vecinit7.i = insertelement <8 x float> %vecinit6.i, float %9, i32 7
  ret <8 x float> %vecinit7.i
}

attributes #0 = { nounwind ssp uwtable "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
