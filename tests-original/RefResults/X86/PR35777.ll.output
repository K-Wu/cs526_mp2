; ModuleID = '<stdin>'
source_filename = "<stdin>"
target triple = "x86_64-apple-macosx10.13.0"

@global = local_unnamed_addr global [6 x double] zeroinitializer, align 16

define { i64, i64 } @patatino(double %arg) {
bb:
  %0 = load <2 x double>, <2 x double>* bitcast ([6 x double]* @global to <2 x double>*), align 16
  %1 = load <2 x double>, <2 x double>* bitcast (double* getelementptr inbounds ([6 x double], [6 x double]* @global, i64 0, i64 2) to <2 x double>*), align 16
  %2 = insertelement <2 x double> undef, double %arg, i32 0
  %3 = insertelement <2 x double> %2, double %arg, i32 1
  %4 = fmul <2 x double> %3, %1
  %5 = fadd <2 x double> %0, %4
  %6 = load <2 x double>, <2 x double>* bitcast (double* getelementptr inbounds ([6 x double], [6 x double]* @global, i64 0, i64 4) to <2 x double>*), align 16
  %7 = fadd <2 x double> %6, %5
  %8 = fptosi <2 x double> %7 to <2 x i32>
  %9 = sext <2 x i32> %8 to <2 x i64>
  %10 = extractelement <2 x i64> %9, i32 0
  %t16 = insertvalue { i64, i64 } undef, i64 %10, 0
  %11 = extractelement <2 x i64> %9, i32 1
  %t17 = insertvalue { i64, i64 } %t16, i64 %11, 1
  ret { i64, i64 } %t17
}
