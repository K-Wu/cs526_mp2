; ModuleID = '<stdin>'
source_filename = "<stdin>"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@a = common local_unnamed_addr global [1 x i32] zeroinitializer, align 4
@b = common local_unnamed_addr global [1 x i32] zeroinitializer, align 4

define i32 @slp_schedule_bundle() local_unnamed_addr #0 {
entry:
  %0 = load <4 x i32>, <4 x i32>* bitcast ([1 x i32]* @b to <4 x i32>*), align 4
  %1 = lshr <4 x i32> %0, <i32 31, i32 31, i32 31, i32 31>
  %2 = xor <4 x i32> <i32 1, i32 1, i32 1, i32 1>, %1
  store <4 x i32> %2, <4 x i32>* bitcast ([1 x i32]* @a to <4 x i32>*), align 4
  %3 = load i32, i32* getelementptr ([1 x i32], [1 x i32]* @b, i64 4, i64 0), align 4
  %.lobit.4 = lshr i32 %3, 31
  %.lobit.not.4 = xor i32 %.lobit.4, 1
  store i32 %.lobit.not.4, i32* getelementptr ([1 x i32], [1 x i32]* @a, i64 4, i64 0), align 4
  %4 = load i32, i32* getelementptr ([1 x i32], [1 x i32]* @b, i64 5, i64 0), align 4
  %.lobit.5 = lshr i32 %4, 31
  %.lobit.not.5 = xor i32 %.lobit.5, 1
  store i32 %.lobit.not.5, i32* getelementptr ([1 x i32], [1 x i32]* @a, i64 5, i64 0), align 4
  ret i32 undef
}

attributes #0 = { "target-cpu"="bdver1" }
