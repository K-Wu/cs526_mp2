; ModuleID = '<stdin>'
source_filename = "<stdin>"
target datalayout = "e-m:o-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.8.0"

declare void @unknown() #0

define void @test(float* %a, float* %b, float* %c, float* %d) #0 {
entry:
  %l0 = load float, float* %a
  %a1 = getelementptr inbounds float, float* %a, i64 1
  %l1 = load float, float* %a1
  %a2 = getelementptr inbounds float, float* %a, i64 2
  %l2 = load float, float* %a2
  %a3 = getelementptr inbounds float, float* %a, i64 3
  %l3 = load float, float* %a3
  call void @unknown()
  call void @unknown()
  call void @unknown()
  call void @unknown()
  call void @unknown()
  call void @unknown()
  call void @unknown()
  call void @unknown()
  call void @unknown()
  call void @unknown()
  call void @unknown()
  call void @unknown()
  call void @unknown()
  call void @unknown()
  call void @unknown()
  call void @unknown()
  call void @unknown()
  call void @unknown()
  call void @unknown()
  call void @unknown()
  call void @unknown()
  call void @unknown()
  call void @unknown()
  call void @unknown()
  call void @unknown()
  call void @unknown()
  call void @unknown()
  call void @unknown()
  store float %l0, float* %b
  %b1 = getelementptr inbounds float, float* %b, i64 1
  store float %l1, float* %b1
  %b2 = getelementptr inbounds float, float* %b, i64 2
  store float %l2, float* %b2
  %b3 = getelementptr inbounds float, float* %b, i64 3
  store float %l3, float* %b3
  %c1 = getelementptr inbounds float, float* %c, i64 1
  %c2 = getelementptr inbounds float, float* %c, i64 2
  %c3 = getelementptr inbounds float, float* %c, i64 3
  %0 = bitcast float* %c to <4 x float>*
  %1 = load <4 x float>, <4 x float>* %0, align 4
  %d1 = getelementptr inbounds float, float* %d, i64 1
  %d2 = getelementptr inbounds float, float* %d, i64 2
  %d3 = getelementptr inbounds float, float* %d, i64 3
  %2 = bitcast float* %d to <4 x float>*
  store <4 x float> %1, <4 x float>* %2, align 4
  ret void
}

attributes #0 = { "target-cpu"="corei7-avx" }
