; ModuleID = '<stdin>'
source_filename = "<stdin>"
target triple = "x86_64-unknown-linux-gnu"

define void @add0(i32* noalias %dst, i32* noalias %src) #0 {
entry:
  %incdec.ptr = getelementptr inbounds i32, i32* %src, i64 1
  %incdec.ptr1 = getelementptr inbounds i32, i32* %dst, i64 1
  %incdec.ptr2 = getelementptr inbounds i32, i32* %src, i64 2
  %incdec.ptr4 = getelementptr inbounds i32, i32* %dst, i64 2
  %incdec.ptr5 = getelementptr inbounds i32, i32* %src, i64 3
  %incdec.ptr7 = getelementptr inbounds i32, i32* %dst, i64 3
  %0 = bitcast i32* %src to <4 x i32>*
  %1 = load <4 x i32>, <4 x i32>* %0, align 4
  %2 = add nsw <4 x i32> <i32 1, i32 1, i32 2, i32 3>, %1
  %3 = bitcast i32* %dst to <4 x i32>*
  store <4 x i32> %2, <4 x i32>* %3, align 4
  ret void
}

define void @add1(i32* noalias %dst, i32* noalias %src) #0 {
entry:
  %incdec.ptr = getelementptr inbounds i32, i32* %src, i64 1
  %0 = load i32, i32* %src, align 4
  %incdec.ptr1 = getelementptr inbounds i32, i32* %dst, i64 1
  store i32 %0, i32* %dst, align 4
  %incdec.ptr2 = getelementptr inbounds i32, i32* %src, i64 2
  %1 = load i32, i32* %incdec.ptr, align 4
  %add3 = add nsw i32 %1, 1
  %incdec.ptr4 = getelementptr inbounds i32, i32* %dst, i64 2
  store i32 %add3, i32* %incdec.ptr1, align 4
  %incdec.ptr5 = getelementptr inbounds i32, i32* %src, i64 3
  %2 = load i32, i32* %incdec.ptr2, align 4
  %add6 = add nsw i32 %2, 2
  %incdec.ptr7 = getelementptr inbounds i32, i32* %dst, i64 3
  store i32 %add6, i32* %incdec.ptr4, align 4
  %3 = load i32, i32* %incdec.ptr5, align 4
  %add9 = add nsw i32 %3, 3
  store i32 %add9, i32* %incdec.ptr7, align 4
  ret void
}

define void @sub0(i32* noalias %dst, i32* noalias %src) #0 {
entry:
  %incdec.ptr = getelementptr inbounds i32, i32* %src, i64 1
  %0 = load i32, i32* %src, align 4
  %sub = add nsw i32 %0, -1
  %incdec.ptr1 = getelementptr inbounds i32, i32* %dst, i64 1
  store i32 %sub, i32* %dst, align 4
  %incdec.ptr2 = getelementptr inbounds i32, i32* %src, i64 2
  %1 = load i32, i32* %incdec.ptr, align 4
  %incdec.ptr3 = getelementptr inbounds i32, i32* %dst, i64 2
  store i32 %1, i32* %incdec.ptr1, align 4
  %incdec.ptr4 = getelementptr inbounds i32, i32* %src, i64 3
  %2 = load i32, i32* %incdec.ptr2, align 4
  %sub5 = add nsw i32 %2, -2
  %incdec.ptr6 = getelementptr inbounds i32, i32* %dst, i64 3
  store i32 %sub5, i32* %incdec.ptr3, align 4
  %3 = load i32, i32* %incdec.ptr4, align 4
  %sub8 = add nsw i32 %3, -3
  store i32 %sub8, i32* %incdec.ptr6, align 4
  ret void
}

define void @sub1(i32* noalias %dst, i32* noalias %src) #0 {
entry:
  %incdec.ptr = getelementptr inbounds i32, i32* %src, i64 1
  %incdec.ptr1 = getelementptr inbounds i32, i32* %dst, i64 1
  %incdec.ptr2 = getelementptr inbounds i32, i32* %src, i64 2
  %incdec.ptr3 = getelementptr inbounds i32, i32* %dst, i64 2
  %incdec.ptr4 = getelementptr inbounds i32, i32* %src, i64 3
  %incdec.ptr6 = getelementptr inbounds i32, i32* %dst, i64 3
  %0 = bitcast i32* %src to <4 x i32>*
  %1 = load <4 x i32>, <4 x i32>* %0, align 4
  %2 = add nsw <4 x i32> <i32 4, i32 -1, i32 -2, i32 -3>, %1
  %3 = bitcast i32* %dst to <4 x i32>*
  store <4 x i32> %2, <4 x i32>* %3, align 4
  ret void
}

define void @sub2(i32* noalias %dst, i32* noalias %src) #0 {
entry:
  %incdec.ptr = getelementptr inbounds i32, i32* %src, i64 1
  %incdec.ptr1 = getelementptr inbounds i32, i32* %dst, i64 1
  %incdec.ptr2 = getelementptr inbounds i32, i32* %src, i64 2
  %incdec.ptr4 = getelementptr inbounds i32, i32* %dst, i64 2
  %incdec.ptr5 = getelementptr inbounds i32, i32* %src, i64 3
  %incdec.ptr7 = getelementptr inbounds i32, i32* %dst, i64 3
  %0 = bitcast i32* %src to <4 x i32>*
  %1 = load <4 x i32>, <4 x i32>* %0, align 4
  %2 = add nsw <4 x i32> <i32 -1, i32 -1, i32 -2, i32 -3>, %1
  %3 = bitcast i32* %dst to <4 x i32>*
  store <4 x i32> %2, <4 x i32>* %3, align 4
  ret void
}

define void @addsub0(i32* noalias %dst, i32* noalias %src) #0 {
entry:
  %incdec.ptr = getelementptr inbounds i32, i32* %src, i64 1
  %0 = load i32, i32* %src, align 4
  %sub = add nsw i32 %0, -1
  %incdec.ptr1 = getelementptr inbounds i32, i32* %dst, i64 1
  store i32 %sub, i32* %dst, align 4
  %incdec.ptr2 = getelementptr inbounds i32, i32* %src, i64 2
  %1 = load i32, i32* %incdec.ptr, align 4
  %incdec.ptr3 = getelementptr inbounds i32, i32* %dst, i64 2
  store i32 %1, i32* %incdec.ptr1, align 4
  %incdec.ptr4 = getelementptr inbounds i32, i32* %src, i64 3
  %2 = load i32, i32* %incdec.ptr2, align 4
  %sub5 = add nsw i32 %2, -2
  %incdec.ptr6 = getelementptr inbounds i32, i32* %dst, i64 3
  store i32 %sub5, i32* %incdec.ptr3, align 4
  %3 = load i32, i32* %incdec.ptr4, align 4
  %sub8 = sub nsw i32 %3, -3
  store i32 %sub8, i32* %incdec.ptr6, align 4
  ret void
}

define void @addsub1(i32* noalias %dst, i32* noalias %src) #0 {
entry:
  %incdec.ptr = getelementptr inbounds i32, i32* %src, i64 1
  %0 = load i32, i32* %src, align 4
  %sub = add nsw i32 %0, -1
  %incdec.ptr1 = getelementptr inbounds i32, i32* %dst, i64 1
  store i32 %sub, i32* %dst, align 4
  %incdec.ptr2 = getelementptr inbounds i32, i32* %src, i64 2
  %1 = load i32, i32* %incdec.ptr, align 4
  %sub1 = sub nsw i32 %1, -1
  %incdec.ptr3 = getelementptr inbounds i32, i32* %dst, i64 2
  store i32 %sub1, i32* %incdec.ptr1, align 4
  %incdec.ptr4 = getelementptr inbounds i32, i32* %src, i64 3
  %2 = load i32, i32* %incdec.ptr2, align 4
  %incdec.ptr6 = getelementptr inbounds i32, i32* %dst, i64 3
  store i32 %2, i32* %incdec.ptr3, align 4
  %3 = load i32, i32* %incdec.ptr4, align 4
  %sub8 = sub nsw i32 %3, -3
  store i32 %sub8, i32* %incdec.ptr6, align 4
  ret void
}

define void @mul(i32* noalias %dst, i32* noalias %src) #0 {
entry:
  %incdec.ptr = getelementptr inbounds i32, i32* %src, i64 1
  %0 = load i32, i32* %src, align 4
  %mul = mul nsw i32 %0, 257
  %incdec.ptr1 = getelementptr inbounds i32, i32* %dst, i64 1
  store i32 %mul, i32* %dst, align 4
  %incdec.ptr2 = getelementptr inbounds i32, i32* %src, i64 2
  %1 = load i32, i32* %incdec.ptr, align 4
  %mul3 = mul nsw i32 %1, -3
  %incdec.ptr4 = getelementptr inbounds i32, i32* %dst, i64 2
  store i32 %mul3, i32* %incdec.ptr1, align 4
  %incdec.ptr5 = getelementptr inbounds i32, i32* %src, i64 3
  %2 = load i32, i32* %incdec.ptr2, align 4
  %incdec.ptr7 = getelementptr inbounds i32, i32* %dst, i64 3
  store i32 %2, i32* %incdec.ptr4, align 4
  %3 = load i32, i32* %incdec.ptr5, align 4
  %mul9 = mul nsw i32 %3, -9
  store i32 %mul9, i32* %incdec.ptr7, align 4
  ret void
}

define void @shl0(i32* noalias %dst, i32* noalias %src) #0 {
entry:
  %incdec.ptr = getelementptr inbounds i32, i32* %src, i64 1
  %0 = load i32, i32* %src, align 4
  %incdec.ptr1 = getelementptr inbounds i32, i32* %dst, i64 1
  store i32 %0, i32* %dst, align 4
  %incdec.ptr2 = getelementptr inbounds i32, i32* %src, i64 2
  %1 = load i32, i32* %incdec.ptr, align 4
  %shl = shl i32 %1, 1
  %incdec.ptr3 = getelementptr inbounds i32, i32* %dst, i64 2
  store i32 %shl, i32* %incdec.ptr1, align 4
  %incdec.ptr4 = getelementptr inbounds i32, i32* %src, i64 3
  %2 = load i32, i32* %incdec.ptr2, align 4
  %shl5 = shl i32 %2, 2
  %incdec.ptr6 = getelementptr inbounds i32, i32* %dst, i64 3
  store i32 %shl5, i32* %incdec.ptr3, align 4
  %3 = load i32, i32* %incdec.ptr4, align 4
  %shl8 = shl i32 %3, 3
  store i32 %shl8, i32* %incdec.ptr6, align 4
  ret void
}

define void @shl1(i32* noalias %dst, i32* noalias %src) #0 {
entry:
  %incdec.ptr = getelementptr inbounds i32, i32* %src, i64 1
  %incdec.ptr1 = getelementptr inbounds i32, i32* %dst, i64 1
  %incdec.ptr2 = getelementptr inbounds i32, i32* %src, i64 2
  %incdec.ptr4 = getelementptr inbounds i32, i32* %dst, i64 2
  %incdec.ptr5 = getelementptr inbounds i32, i32* %src, i64 3
  %incdec.ptr7 = getelementptr inbounds i32, i32* %dst, i64 3
  %0 = bitcast i32* %src to <4 x i32>*
  %1 = load <4 x i32>, <4 x i32>* %0, align 4
  %2 = shl <4 x i32> %1, <i32 7, i32 1, i32 2, i32 3>
  %3 = bitcast i32* %dst to <4 x i32>*
  store <4 x i32> %2, <4 x i32>* %3, align 4
  ret void
}

define void @add0f(float* noalias %dst, float* noalias %src) #0 {
entry:
  %incdec.ptr = getelementptr inbounds float, float* %src, i64 1
  %incdec.ptr1 = getelementptr inbounds float, float* %dst, i64 1
  %incdec.ptr2 = getelementptr inbounds float, float* %src, i64 2
  %incdec.ptr4 = getelementptr inbounds float, float* %dst, i64 2
  %incdec.ptr5 = getelementptr inbounds float, float* %src, i64 3
  %incdec.ptr7 = getelementptr inbounds float, float* %dst, i64 3
  %0 = bitcast float* %src to <4 x float>*
  %1 = load <4 x float>, <4 x float>* %0, align 4
  %2 = fadd fast <4 x float> <float 1.000000e+00, float 1.000000e+00, float 2.000000e+00, float 3.000000e+00>, %1
  %3 = bitcast float* %dst to <4 x float>*
  store <4 x float> %2, <4 x float>* %3, align 4
  ret void
}

define void @add1f(float* noalias %dst, float* noalias %src) #0 {
entry:
  %incdec.ptr = getelementptr inbounds float, float* %src, i64 1
  %0 = load float, float* %src, align 4
  %incdec.ptr1 = getelementptr inbounds float, float* %dst, i64 1
  store float %0, float* %dst, align 4
  %incdec.ptr2 = getelementptr inbounds float, float* %src, i64 2
  %1 = load float, float* %incdec.ptr, align 4
  %add3 = fadd fast float %1, 1.000000e+00
  %incdec.ptr4 = getelementptr inbounds float, float* %dst, i64 2
  store float %add3, float* %incdec.ptr1, align 4
  %incdec.ptr5 = getelementptr inbounds float, float* %src, i64 3
  %2 = load float, float* %incdec.ptr2, align 4
  %add6 = fadd fast float %2, 2.000000e+00
  %incdec.ptr7 = getelementptr inbounds float, float* %dst, i64 3
  store float %add6, float* %incdec.ptr4, align 4
  %3 = load float, float* %incdec.ptr5, align 4
  %add9 = fadd fast float %3, 3.000000e+00
  store float %add9, float* %incdec.ptr7, align 4
  ret void
}

define void @sub0f(float* noalias %dst, float* noalias %src) #0 {
entry:
  %incdec.ptr = getelementptr inbounds float, float* %src, i64 1
  %0 = load float, float* %src, align 4
  %add = fadd fast float %0, -1.000000e+00
  %incdec.ptr1 = getelementptr inbounds float, float* %dst, i64 1
  store float %add, float* %dst, align 4
  %incdec.ptr2 = getelementptr inbounds float, float* %src, i64 2
  %1 = load float, float* %incdec.ptr, align 4
  %incdec.ptr4 = getelementptr inbounds float, float* %dst, i64 2
  store float %1, float* %incdec.ptr1, align 4
  %incdec.ptr5 = getelementptr inbounds float, float* %src, i64 3
  %2 = load float, float* %incdec.ptr2, align 4
  %add6 = fadd fast float %2, -2.000000e+00
  %incdec.ptr7 = getelementptr inbounds float, float* %dst, i64 3
  store float %add6, float* %incdec.ptr4, align 4
  %3 = load float, float* %incdec.ptr5, align 4
  %add9 = fadd fast float %3, -3.000000e+00
  store float %add9, float* %incdec.ptr7, align 4
  ret void
}

define void @sub1f(float* noalias %dst, float* noalias %src) #0 {
entry:
  %incdec.ptr = getelementptr inbounds float, float* %src, i64 1
  %incdec.ptr1 = getelementptr inbounds float, float* %dst, i64 1
  %incdec.ptr2 = getelementptr inbounds float, float* %src, i64 2
  %incdec.ptr3 = getelementptr inbounds float, float* %dst, i64 2
  %incdec.ptr4 = getelementptr inbounds float, float* %src, i64 3
  %incdec.ptr6 = getelementptr inbounds float, float* %dst, i64 3
  %0 = bitcast float* %src to <4 x float>*
  %1 = load <4 x float>, <4 x float>* %0, align 4
  %2 = fadd fast <4 x float> <float 4.000000e+00, float -1.000000e+00, float -2.000000e+00, float -3.000000e+00>, %1
  %3 = bitcast float* %dst to <4 x float>*
  store <4 x float> %2, <4 x float>* %3, align 4
  ret void
}

define void @sub2f(float* noalias %dst, float* noalias %src) #0 {
entry:
  %incdec.ptr = getelementptr inbounds float, float* %src, i64 1
  %incdec.ptr1 = getelementptr inbounds float, float* %dst, i64 1
  %incdec.ptr2 = getelementptr inbounds float, float* %src, i64 2
  %incdec.ptr4 = getelementptr inbounds float, float* %dst, i64 2
  %incdec.ptr5 = getelementptr inbounds float, float* %src, i64 3
  %incdec.ptr7 = getelementptr inbounds float, float* %dst, i64 3
  %0 = bitcast float* %src to <4 x float>*
  %1 = load <4 x float>, <4 x float>* %0, align 4
  %2 = fadd fast <4 x float> <float -1.000000e+00, float -1.000000e+00, float -2.000000e+00, float -3.000000e+00>, %1
  %3 = bitcast float* %dst to <4 x float>*
  store <4 x float> %2, <4 x float>* %3, align 4
  ret void
}

define void @addsub0f(float* noalias %dst, float* noalias %src) #0 {
entry:
  %incdec.ptr = getelementptr inbounds float, float* %src, i64 1
  %0 = load float, float* %src, align 4
  %sub = fadd fast float %0, -1.000000e+00
  %incdec.ptr1 = getelementptr inbounds float, float* %dst, i64 1
  store float %sub, float* %dst, align 4
  %incdec.ptr2 = getelementptr inbounds float, float* %src, i64 2
  %1 = load float, float* %incdec.ptr, align 4
  %incdec.ptr3 = getelementptr inbounds float, float* %dst, i64 2
  store float %1, float* %incdec.ptr1, align 4
  %incdec.ptr4 = getelementptr inbounds float, float* %src, i64 3
  %2 = load float, float* %incdec.ptr2, align 4
  %sub5 = fadd fast float %2, -2.000000e+00
  %incdec.ptr6 = getelementptr inbounds float, float* %dst, i64 3
  store float %sub5, float* %incdec.ptr3, align 4
  %3 = load float, float* %incdec.ptr4, align 4
  %sub8 = fsub fast float %3, -3.000000e+00
  store float %sub8, float* %incdec.ptr6, align 4
  ret void
}

define void @addsub1f(float* noalias %dst, float* noalias %src) #0 {
entry:
  %incdec.ptr = getelementptr inbounds float, float* %src, i64 1
  %0 = load float, float* %src, align 4
  %sub = fadd fast float %0, -1.000000e+00
  %incdec.ptr1 = getelementptr inbounds float, float* %dst, i64 1
  store float %sub, float* %dst, align 4
  %incdec.ptr2 = getelementptr inbounds float, float* %src, i64 2
  %1 = load float, float* %incdec.ptr, align 4
  %sub1 = fsub fast float %1, -1.000000e+00
  %incdec.ptr3 = getelementptr inbounds float, float* %dst, i64 2
  store float %sub1, float* %incdec.ptr1, align 4
  %incdec.ptr4 = getelementptr inbounds float, float* %src, i64 3
  %2 = load float, float* %incdec.ptr2, align 4
  %incdec.ptr6 = getelementptr inbounds float, float* %dst, i64 3
  store float %2, float* %incdec.ptr3, align 4
  %3 = load float, float* %incdec.ptr4, align 4
  %sub8 = fsub fast float %3, -3.000000e+00
  store float %sub8, float* %incdec.ptr6, align 4
  ret void
}

define void @mulf(float* noalias %dst, float* noalias %src) #0 {
entry:
  %incdec.ptr = getelementptr inbounds float, float* %src, i64 1
  %0 = load float, float* %src, align 4
  %sub = fmul fast float %0, 2.570000e+02
  %incdec.ptr1 = getelementptr inbounds float, float* %dst, i64 1
  store float %sub, float* %dst, align 4
  %incdec.ptr2 = getelementptr inbounds float, float* %src, i64 2
  %1 = load float, float* %incdec.ptr, align 4
  %sub3 = fmul fast float %1, -3.000000e+00
  %incdec.ptr4 = getelementptr inbounds float, float* %dst, i64 2
  store float %sub3, float* %incdec.ptr1, align 4
  %incdec.ptr5 = getelementptr inbounds float, float* %src, i64 3
  %2 = load float, float* %incdec.ptr2, align 4
  %incdec.ptr7 = getelementptr inbounds float, float* %dst, i64 3
  store float %2, float* %incdec.ptr4, align 4
  %3 = load float, float* %incdec.ptr5, align 4
  %sub9 = fmul fast float %3, -9.000000e+00
  store float %sub9, float* %incdec.ptr7, align 4
  ret void
}

define void @add0fn(float* noalias %dst, float* noalias %src) #0 {
entry:
  %incdec.ptr = getelementptr inbounds float, float* %src, i64 1
  %incdec.ptr1 = getelementptr inbounds float, float* %dst, i64 1
  %incdec.ptr2 = getelementptr inbounds float, float* %src, i64 2
  %incdec.ptr4 = getelementptr inbounds float, float* %dst, i64 2
  %incdec.ptr5 = getelementptr inbounds float, float* %src, i64 3
  %incdec.ptr7 = getelementptr inbounds float, float* %dst, i64 3
  %0 = bitcast float* %src to <4 x float>*
  %1 = load <4 x float>, <4 x float>* %0, align 4
  %2 = fadd <4 x float> <float 1.000000e+00, float 1.000000e+00, float 2.000000e+00, float 3.000000e+00>, %1
  %3 = bitcast float* %dst to <4 x float>*
  store <4 x float> %2, <4 x float>* %3, align 4
  ret void
}

define void @add1fn(float* noalias %dst, float* noalias %src) #0 {
entry:
  %incdec.ptr = getelementptr inbounds float, float* %src, i64 1
  %0 = load float, float* %src, align 4
  %incdec.ptr1 = getelementptr inbounds float, float* %dst, i64 1
  store float %0, float* %dst, align 4
  %incdec.ptr2 = getelementptr inbounds float, float* %src, i64 2
  %1 = load float, float* %incdec.ptr, align 4
  %add3 = fadd float %1, 1.000000e+00
  %incdec.ptr4 = getelementptr inbounds float, float* %dst, i64 2
  store float %add3, float* %incdec.ptr1, align 4
  %incdec.ptr5 = getelementptr inbounds float, float* %src, i64 3
  %2 = load float, float* %incdec.ptr2, align 4
  %add6 = fadd float %2, 2.000000e+00
  %incdec.ptr7 = getelementptr inbounds float, float* %dst, i64 3
  store float %add6, float* %incdec.ptr4, align 4
  %3 = load float, float* %incdec.ptr5, align 4
  %add9 = fadd float %3, 3.000000e+00
  store float %add9, float* %incdec.ptr7, align 4
  ret void
}

define void @sub0fn(float* noalias %dst, float* noalias %src) #0 {
entry:
  %incdec.ptr = getelementptr inbounds float, float* %src, i64 1
  %0 = load float, float* %src, align 4
  %add = fadd fast float %0, -1.000000e+00
  %incdec.ptr1 = getelementptr inbounds float, float* %dst, i64 1
  store float %add, float* %dst, align 4
  %incdec.ptr2 = getelementptr inbounds float, float* %src, i64 2
  %1 = load float, float* %incdec.ptr, align 4
  %incdec.ptr4 = getelementptr inbounds float, float* %dst, i64 2
  store float %1, float* %incdec.ptr1, align 4
  %incdec.ptr5 = getelementptr inbounds float, float* %src, i64 3
  %2 = load float, float* %incdec.ptr2, align 4
  %add6 = fadd float %2, -2.000000e+00
  %incdec.ptr7 = getelementptr inbounds float, float* %dst, i64 3
  store float %add6, float* %incdec.ptr4, align 4
  %3 = load float, float* %incdec.ptr5, align 4
  %add9 = fadd float %3, -3.000000e+00
  store float %add9, float* %incdec.ptr7, align 4
  ret void
}

define void @sub1fn(float* noalias %dst, float* noalias %src) #0 {
entry:
  %incdec.ptr = getelementptr inbounds float, float* %src, i64 1
  %incdec.ptr1 = getelementptr inbounds float, float* %dst, i64 1
  %incdec.ptr2 = getelementptr inbounds float, float* %src, i64 2
  %incdec.ptr3 = getelementptr inbounds float, float* %dst, i64 2
  %incdec.ptr4 = getelementptr inbounds float, float* %src, i64 3
  %incdec.ptr6 = getelementptr inbounds float, float* %dst, i64 3
  %0 = bitcast float* %src to <4 x float>*
  %1 = load <4 x float>, <4 x float>* %0, align 4
  %2 = fadd <4 x float> <float 4.000000e+00, float -1.000000e+00, float -2.000000e+00, float -3.000000e+00>, %1
  %3 = bitcast float* %dst to <4 x float>*
  store <4 x float> %2, <4 x float>* %3, align 4
  ret void
}

define void @sub2fn(float* noalias %dst, float* noalias %src) #0 {
entry:
  %incdec.ptr = getelementptr inbounds float, float* %src, i64 1
  %incdec.ptr1 = getelementptr inbounds float, float* %dst, i64 1
  %incdec.ptr2 = getelementptr inbounds float, float* %src, i64 2
  %incdec.ptr4 = getelementptr inbounds float, float* %dst, i64 2
  %incdec.ptr5 = getelementptr inbounds float, float* %src, i64 3
  %incdec.ptr7 = getelementptr inbounds float, float* %dst, i64 3
  %0 = bitcast float* %src to <4 x float>*
  %1 = load <4 x float>, <4 x float>* %0, align 4
  %2 = fadd <4 x float> <float -1.000000e+00, float -1.000000e+00, float -2.000000e+00, float -3.000000e+00>, %1
  %3 = bitcast float* %dst to <4 x float>*
  store <4 x float> %2, <4 x float>* %3, align 4
  ret void
}

define void @mulfn(float* noalias %dst, float* noalias %src) #0 {
entry:
  %incdec.ptr = getelementptr inbounds float, float* %src, i64 1
  %0 = load float, float* %src, align 4
  %sub = fmul float %0, 2.570000e+02
  %incdec.ptr1 = getelementptr inbounds float, float* %dst, i64 1
  store float %sub, float* %dst, align 4
  %incdec.ptr2 = getelementptr inbounds float, float* %src, i64 2
  %1 = load float, float* %incdec.ptr, align 4
  %sub3 = fmul float %1, -3.000000e+00
  %incdec.ptr4 = getelementptr inbounds float, float* %dst, i64 2
  store float %sub3, float* %incdec.ptr1, align 4
  %incdec.ptr5 = getelementptr inbounds float, float* %src, i64 3
  %2 = load float, float* %incdec.ptr2, align 4
  %incdec.ptr7 = getelementptr inbounds float, float* %dst, i64 3
  store float %2, float* %incdec.ptr4, align 4
  %3 = load float, float* %incdec.ptr5, align 4
  %sub9 = fmul fast float %3, -9.000000e+00
  store float %sub9, float* %incdec.ptr7, align 4
  ret void
}

attributes #0 = { "target-cpu"="bdver2" }
