; ModuleID = '<stdin>'
source_filename = "<stdin>"
target triple = "x86_64-unknown"

define <8 x float> @ceil_floor(<8 x float> %a) {
  %a0 = extractelement <8 x float> %a, i32 0
  %a1 = extractelement <8 x float> %a, i32 1
  %a2 = extractelement <8 x float> %a, i32 2
  %a3 = extractelement <8 x float> %a, i32 3
  %a4 = extractelement <8 x float> %a, i32 4
  %a5 = extractelement <8 x float> %a, i32 5
  %a6 = extractelement <8 x float> %a, i32 6
  %a7 = extractelement <8 x float> %a, i32 7
  %ab0 = call float @llvm.ceil.f32(float %a0)
  %ab1 = call float @llvm.floor.f32(float %a1)
  %ab2 = call float @llvm.floor.f32(float %a2)
  %ab3 = call float @llvm.ceil.f32(float %a3)
  %ab4 = call float @llvm.ceil.f32(float %a4)
  %ab5 = call float @llvm.ceil.f32(float %a5)
  %ab6 = call float @llvm.floor.f32(float %a6)
  %ab7 = call float @llvm.floor.f32(float %a7)
  %r0 = insertelement <8 x float> undef, float %ab0, i32 0
  %r1 = insertelement <8 x float> %r0, float %ab1, i32 1
  %r2 = insertelement <8 x float> %r1, float %ab2, i32 2
  %r3 = insertelement <8 x float> %r2, float %ab3, i32 3
  %r4 = insertelement <8 x float> %r3, float %ab4, i32 4
  %r5 = insertelement <8 x float> %r4, float %ab5, i32 5
  %r6 = insertelement <8 x float> %r5, float %ab6, i32 6
  %r7 = insertelement <8 x float> %r6, float %ab7, i32 7
  ret <8 x float> %r7
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #0

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #0

attributes #0 = { nounwind readnone speculatable }
