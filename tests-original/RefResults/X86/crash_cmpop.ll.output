; ModuleID = '<stdin>'
source_filename = "<stdin>"
target datalayout = "e-m:o-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.10.0"

define void @testfunc(float* nocapture %dest, float* nocapture readonly %src) {
entry:
  br label %for.body

for.body:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.body ]
  %acc1.056 = phi float [ 0.000000e+00, %entry ], [ %add13, %for.body ]
  %0 = phi <2 x float> [ zeroinitializer, %entry ], [ %23, %for.body ]
  %arrayidx = getelementptr inbounds float, float* %src, i64 %indvars.iv
  %1 = load float, float* %arrayidx, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %arrayidx2 = getelementptr inbounds float, float* %dest, i64 %indvars.iv
  store float %acc1.056, float* %arrayidx2, align 4
  %2 = extractelement <2 x float> %0, i32 1
  %3 = insertelement <2 x float> undef, float %2, i32 0
  %4 = extractelement <2 x float> %0, i32 0
  %5 = insertelement <2 x float> %3, float %4, i32 1
  %6 = insertelement <2 x float> undef, float %1, i32 0
  %7 = insertelement <2 x float> %6, float %1, i32 1
  %8 = fadd <2 x float> %5, %7
  %9 = fmul <2 x float> zeroinitializer, %0
  %10 = fadd <2 x float> %9, %8
  %11 = fcmp olt <2 x float> %10, <float 1.000000e+00, float 1.000000e+00>
  %12 = select <2 x i1> %11, <2 x float> %10, <2 x float> <float 1.000000e+00, float 1.000000e+00>
  %13 = fcmp olt <2 x float> %12, <float -1.000000e+00, float -1.000000e+00>
  %14 = fmul <2 x float> zeroinitializer, %12
  %15 = select <2 x i1> %13, <2 x float> <float -0.000000e+00, float -0.000000e+00>, <2 x float> %14
  %16 = extractelement <2 x float> %15, i32 0
  %17 = extractelement <2 x float> %15, i32 1
  %add13 = fadd float %16, %17
  %18 = insertelement <2 x float> undef, float %17, i32 0
  %19 = insertelement <2 x float> %18, float %add13, i32 1
  %20 = fcmp olt <2 x float> %19, <float 1.000000e+00, float 1.000000e+00>
  %21 = select <2 x i1> %20, <2 x float> %19, <2 x float> <float 1.000000e+00, float 1.000000e+00>
  %22 = fcmp olt <2 x float> %21, <float -1.000000e+00, float -1.000000e+00>
  %23 = select <2 x i1> %22, <2 x float> <float -1.000000e+00, float -1.000000e+00>, <2 x float> %21
  %exitcond = icmp eq i64 %indvars.iv.next, 32
  br i1 %exitcond, label %for.end, label %for.body

for.end:                                          ; preds = %for.body
  ret void
}
