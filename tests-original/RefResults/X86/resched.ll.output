; ModuleID = '<stdin>'
source_filename = "<stdin>"
target triple = "x86_64-unknown-linux-gnu"

%"struct.std::array" = type { [32 x i8] }

define fastcc void @_ZN12_GLOBAL__N_127PolynomialMultiplyRecognize9recognizeEv() unnamed_addr #0 align 2 {
entry:
  br i1 undef, label %if.end50.i, label %if.then22.i

if.then22.i:                                      ; preds = %entry
  %sub.i = add nsw i32 undef, -1
  %conv31.i = and i32 undef, %sub.i
  %0 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* undef, i64 0, i32 0, i64 0
  %arrayidx.i.i7.1.i.i = getelementptr inbounds %"struct.std::array", %"struct.std::array"* undef, i64 0, i32 0, i64 1
  %arrayidx.i.i7.2.i.i = getelementptr inbounds %"struct.std::array", %"struct.std::array"* undef, i64 0, i32 0, i64 2
  %arrayidx.i.i7.3.i.i = getelementptr inbounds %"struct.std::array", %"struct.std::array"* undef, i64 0, i32 0, i64 3
  %arrayidx.i.i7.4.i.i = getelementptr inbounds %"struct.std::array", %"struct.std::array"* undef, i64 0, i32 0, i64 4
  %arrayidx.i.i7.5.i.i = getelementptr inbounds %"struct.std::array", %"struct.std::array"* undef, i64 0, i32 0, i64 5
  %arrayidx.i.i7.6.i.i = getelementptr inbounds %"struct.std::array", %"struct.std::array"* undef, i64 0, i32 0, i64 6
  %arrayidx.i.i7.7.i.i = getelementptr inbounds %"struct.std::array", %"struct.std::array"* undef, i64 0, i32 0, i64 7
  %1 = insertelement <8 x i32> undef, i32 %conv31.i, i32 0
  %2 = insertelement <8 x i32> %1, i32 %conv31.i, i32 1
  %3 = insertelement <8 x i32> %2, i32 %conv31.i, i32 2
  %4 = insertelement <8 x i32> %3, i32 %conv31.i, i32 3
  %5 = insertelement <8 x i32> %4, i32 %conv31.i, i32 4
  %6 = insertelement <8 x i32> %5, i32 %conv31.i, i32 5
  %7 = insertelement <8 x i32> %6, i32 %conv31.i, i32 6
  %8 = insertelement <8 x i32> %7, i32 %conv31.i, i32 7
  %9 = lshr <8 x i32> %8, <i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8>
  %arrayidx.i.i7.8.i.i = getelementptr inbounds %"struct.std::array", %"struct.std::array"* undef, i64 0, i32 0, i64 8
  %arrayidx.i.i7.9.i.i = getelementptr inbounds %"struct.std::array", %"struct.std::array"* undef, i64 0, i32 0, i64 9
  %arrayidx.i.i7.10.i.i = getelementptr inbounds %"struct.std::array", %"struct.std::array"* undef, i64 0, i32 0, i64 10
  %arrayidx.i.i7.11.i.i = getelementptr inbounds %"struct.std::array", %"struct.std::array"* undef, i64 0, i32 0, i64 11
  %10 = insertelement <4 x i32> undef, i32 %conv31.i, i32 0
  %11 = insertelement <4 x i32> %10, i32 %conv31.i, i32 1
  %12 = insertelement <4 x i32> %11, i32 %conv31.i, i32 2
  %13 = insertelement <4 x i32> %12, i32 %conv31.i, i32 3
  %14 = lshr <4 x i32> %13, <i32 9, i32 10, i32 11, i32 12>
  %arrayidx.i.i7.12.i.i = getelementptr inbounds %"struct.std::array", %"struct.std::array"* undef, i64 0, i32 0, i64 12
  %shr.12.i.i = lshr i32 %conv31.i, 13
  %arrayidx.i.i7.13.i.i = getelementptr inbounds %"struct.std::array", %"struct.std::array"* undef, i64 0, i32 0, i64 13
  %shr.13.i.i = lshr i32 %conv31.i, 14
  %arrayidx.i.i7.14.i.i = getelementptr inbounds %"struct.std::array", %"struct.std::array"* undef, i64 0, i32 0, i64 14
  %shr.14.i.i = lshr i32 %conv31.i, 15
  %15 = insertelement <16 x i32> undef, i32 %sub.i, i32 0
  %16 = extractelement <8 x i32> %9, i32 0
  %17 = insertelement <16 x i32> %15, i32 %16, i32 1
  %18 = extractelement <8 x i32> %9, i32 1
  %19 = insertelement <16 x i32> %17, i32 %18, i32 2
  %20 = extractelement <8 x i32> %9, i32 2
  %21 = insertelement <16 x i32> %19, i32 %20, i32 3
  %22 = extractelement <8 x i32> %9, i32 3
  %23 = insertelement <16 x i32> %21, i32 %22, i32 4
  %24 = extractelement <8 x i32> %9, i32 4
  %25 = insertelement <16 x i32> %23, i32 %24, i32 5
  %26 = extractelement <8 x i32> %9, i32 5
  %27 = insertelement <16 x i32> %25, i32 %26, i32 6
  %28 = extractelement <8 x i32> %9, i32 6
  %29 = insertelement <16 x i32> %27, i32 %28, i32 7
  %30 = extractelement <8 x i32> %9, i32 7
  %31 = insertelement <16 x i32> %29, i32 %30, i32 8
  %32 = extractelement <4 x i32> %14, i32 0
  %33 = insertelement <16 x i32> %31, i32 %32, i32 9
  %34 = extractelement <4 x i32> %14, i32 1
  %35 = insertelement <16 x i32> %33, i32 %34, i32 10
  %36 = extractelement <4 x i32> %14, i32 2
  %37 = insertelement <16 x i32> %35, i32 %36, i32 11
  %38 = extractelement <4 x i32> %14, i32 3
  %39 = insertelement <16 x i32> %37, i32 %38, i32 12
  %40 = insertelement <16 x i32> %39, i32 %shr.12.i.i, i32 13
  %41 = insertelement <16 x i32> %40, i32 %shr.13.i.i, i32 14
  %42 = insertelement <16 x i32> %41, i32 %shr.14.i.i, i32 15
  %43 = trunc <16 x i32> %42 to <16 x i8>
  %44 = and <16 x i8> <i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1>, %43
  %arrayidx.i.i7.15.i.i = getelementptr inbounds %"struct.std::array", %"struct.std::array"* undef, i64 0, i32 0, i64 15
  %45 = bitcast i8* %0 to <16 x i8>*
  store <16 x i8> %44, <16 x i8>* %45, align 1
  unreachable

if.end50.i:                                       ; preds = %entry
  ret void
}

attributes #0 = { "target-cpu"="bdver2" }
