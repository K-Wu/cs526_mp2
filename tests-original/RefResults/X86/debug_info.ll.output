; ModuleID = '<stdin>'
source_filename = "<stdin>"
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.8.0"

; Function Attrs: nounwind ssp uwtable
define i32 @depth(double* nocapture %A, i32 %m) #0 !dbg !5 {
entry:
  call void @llvm.dbg.value(metadata double* %A, metadata !12, metadata !DIExpression()), !dbg !18
  call void @llvm.dbg.value(metadata i32 %m, metadata !13, metadata !DIExpression()), !dbg !18
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !14, metadata !DIExpression()), !dbg !19
  call void @llvm.dbg.value(metadata double 2.000000e-01, metadata !15, metadata !DIExpression()), !dbg !19
  call void @llvm.dbg.value(metadata i32 0, metadata !16, metadata !DIExpression()), !dbg !20
  %cmp8 = icmp sgt i32 %m, 0, !dbg !20
  br i1 %cmp8, label %for.body.lr.ph, label %for.end, !dbg !20

for.body.lr.ph:                                   ; preds = %entry
  %arrayidx = getelementptr inbounds double, double* %A, i64 4, !dbg !21
  %0 = bitcast double* %arrayidx to <2 x double>*, !dbg !21
  %1 = load <2 x double>, <2 x double>* %0, align 8, !dbg !21
  br label %for.end, !dbg !20

for.end:                                          ; preds = %for.body.lr.ph, %entry
  %2 = phi <2 x double> [ %1, %for.body.lr.ph ], [ <double 0.000000e+00, double 1.000000e+00>, %entry ]
  %arrayidx2 = getelementptr inbounds double, double* %A, i64 8, !dbg !23
  %3 = bitcast double* %arrayidx2 to <2 x double>*, !dbg !23
  store <2 x double> %2, <2 x double>* %3, align 8, !dbg !23
  ret i32 undef, !dbg !24
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { nounwind ssp uwtable "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="corei7-avx" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable "target-cpu"="corei7-avx" }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!3, !4}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.4 (trunk 187335) (llvm/trunk 187335:187340M)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !2, globals: !2, imports: !2)
!1 = !DIFile(filename: "file.c", directory: "/Users/nadav")
!2 = !{}
!3 = !{i32 2, !"Dwarf Version", i32 2}
!4 = !{i32 1, !"Debug Info Version", i32 3}
!5 = distinct !DISubprogram(name: "depth", scope: !1, file: !1, line: 1, type: !6, scopeLine: 1, virtualIndex: 6, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !11)
!6 = !DISubroutineType(types: !7)
!7 = !{!8, !9, !8}
!8 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!9 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10, size: 64, align: 64)
!10 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!11 = !{!12, !13, !14, !15, !16}
!12 = !DILocalVariable(name: "A", arg: 1, scope: !5, file: !1, line: 1, type: !9)
!13 = !DILocalVariable(name: "m", arg: 2, scope: !5, file: !1, line: 1, type: !8)
!14 = !DILocalVariable(name: "y0", scope: !5, file: !1, line: 2, type: !10)
!15 = !DILocalVariable(name: "y1", scope: !5, file: !1, line: 2, type: !10)
!16 = !DILocalVariable(name: "i", scope: !17, file: !1, line: 3, type: !8)
!17 = distinct !DILexicalBlock(scope: !5, file: !1, line: 3)
!18 = !DILocation(line: 1, scope: !5)
!19 = !DILocation(line: 2, scope: !5)
!20 = !DILocation(line: 3, scope: !17)
!21 = !DILocation(line: 4, scope: !22)
!22 = distinct !DILexicalBlock(scope: !17, file: !1, line: 3)
!23 = !DILocation(line: 7, scope: !5)
!24 = !DILocation(line: 8, scope: !5)
