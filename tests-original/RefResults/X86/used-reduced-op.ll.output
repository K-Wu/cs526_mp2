; ModuleID = '<stdin>'
source_filename = "<stdin>"
target triple = "x86_64-unknown-linux-gnu"

@k = external dso_local constant [8 x [4 x i32]], align 16
@l = external dso_local global [366 x i32], align 16

define void @n() local_unnamed_addr #0 {
entry:
  %0 = load i32, i32* getelementptr inbounds ([8 x [4 x i32]], [8 x [4 x i32]]* @k, i64 0, i64 0, i64 0), align 16
  %1 = load <4 x i32>, <4 x i32>* bitcast (i32* getelementptr inbounds ([8 x [4 x i32]], [8 x [4 x i32]]* @k, i64 0, i64 0, i64 1) to <4 x i32>*), align 4
  %2 = load i32, i32* getelementptr inbounds ([8 x [4 x i32]], [8 x [4 x i32]]* @k, i64 0, i64 1, i64 1), align 4
  %3 = load i32, i32* getelementptr inbounds ([8 x [4 x i32]], [8 x [4 x i32]]* @k, i64 0, i64 1, i64 2), align 8
  %4 = load i32, i32* getelementptr inbounds ([8 x [4 x i32]], [8 x [4 x i32]]* @k, i64 0, i64 1, i64 3), align 4
  %5 = load i32, i32* getelementptr inbounds ([8 x [4 x i32]], [8 x [4 x i32]]* @k, i64 0, i64 2, i64 0), align 16
  %6 = load i32, i32* getelementptr inbounds ([8 x [4 x i32]], [8 x [4 x i32]]* @k, i64 0, i64 2, i64 1), align 4
  %7 = load i32, i32* getelementptr inbounds ([8 x [4 x i32]], [8 x [4 x i32]]* @k, i64 0, i64 2, i64 2), align 8
  %8 = load i32, i32* getelementptr inbounds ([8 x [4 x i32]], [8 x [4 x i32]]* @k, i64 0, i64 2, i64 3), align 4
  %9 = load i32, i32* getelementptr inbounds ([8 x [4 x i32]], [8 x [4 x i32]]* @k, i64 0, i64 3, i64 0), align 16
  %10 = load i32, i32* getelementptr inbounds ([8 x [4 x i32]], [8 x [4 x i32]]* @k, i64 0, i64 3, i64 1), align 4
  %11 = load i32, i32* getelementptr inbounds ([8 x [4 x i32]], [8 x [4 x i32]]* @k, i64 0, i64 3, i64 2), align 8
  %12 = load i32, i32* getelementptr inbounds ([8 x [4 x i32]], [8 x [4 x i32]]* @k, i64 0, i64 3, i64 3), align 4
  %13 = load i32, i32* getelementptr inbounds ([8 x [4 x i32]], [8 x [4 x i32]]* @k, i64 0, i64 4, i64 0), align 16
  %14 = load i32, i32* getelementptr inbounds ([8 x [4 x i32]], [8 x [4 x i32]]* @k, i64 0, i64 4, i64 1), align 4
  %15 = load i32, i32* getelementptr inbounds ([8 x [4 x i32]], [8 x [4 x i32]]* @k, i64 0, i64 4, i64 2), align 8
  %16 = load i32, i32* getelementptr inbounds ([8 x [4 x i32]], [8 x [4 x i32]]* @k, i64 0, i64 4, i64 3), align 4
  %17 = load i32, i32* getelementptr inbounds ([8 x [4 x i32]], [8 x [4 x i32]]* @k, i64 0, i64 5, i64 0), align 16
  %18 = load i32, i32* getelementptr inbounds ([8 x [4 x i32]], [8 x [4 x i32]]* @k, i64 0, i64 5, i64 1), align 4
  %19 = load i32, i32* getelementptr inbounds ([8 x [4 x i32]], [8 x [4 x i32]]* @k, i64 0, i64 5, i64 2), align 8
  %20 = load i32, i32* getelementptr inbounds ([8 x [4 x i32]], [8 x [4 x i32]]* @k, i64 0, i64 5, i64 3), align 4
  %21 = load i32, i32* getelementptr inbounds ([8 x [4 x i32]], [8 x [4 x i32]]* @k, i64 0, i64 6, i64 0), align 16
  %22 = load i32, i32* getelementptr inbounds ([8 x [4 x i32]], [8 x [4 x i32]]* @k, i64 0, i64 6, i64 1), align 4
  %23 = load i32, i32* getelementptr inbounds ([8 x [4 x i32]], [8 x [4 x i32]]* @k, i64 0, i64 6, i64 2), align 8
  %24 = load i32, i32* getelementptr inbounds ([8 x [4 x i32]], [8 x [4 x i32]]* @k, i64 0, i64 6, i64 3), align 4
  %25 = load i32, i32* getelementptr inbounds ([8 x [4 x i32]], [8 x [4 x i32]]* @k, i64 0, i64 7, i64 0), align 16
  %26 = load i32, i32* getelementptr inbounds ([8 x [4 x i32]], [8 x [4 x i32]]* @k, i64 0, i64 7, i64 1), align 4
  %27 = load i32, i32* getelementptr inbounds ([8 x [4 x i32]], [8 x [4 x i32]]* @k, i64 0, i64 7, i64 2), align 8
  %28 = load i32, i32* getelementptr inbounds ([8 x [4 x i32]], [8 x [4 x i32]]* @k, i64 0, i64 7, i64 3), align 4
  br label %for.cond

for.cond:                                         ; preds = %for.cond, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.cond ], [ 0, %entry ]
  %b.0 = phi i32 [ %spec.select8.3.7, %for.cond ], [ undef, %entry ]
  %29 = trunc i64 %indvars.iv to i32
  %30 = add i32 %29, -183
  %sub = sub i32 %30, %0
  %31 = icmp slt i32 %sub, 0
  %neg = sub nsw i32 0, %sub
  %32 = select i1 %31, i32 %neg, i32 %sub
  %cmp12 = icmp slt i32 %32, %b.0
  %spec.select8 = select i1 %cmp12, i32 %32, i32 %b.0
  %33 = insertelement <4 x i32> undef, i32 %30, i32 0
  %34 = insertelement <4 x i32> %33, i32 %30, i32 1
  %35 = insertelement <4 x i32> %34, i32 %30, i32 2
  %36 = insertelement <4 x i32> %35, i32 %30, i32 3
  %37 = sub <4 x i32> %36, %1
  %38 = icmp slt <4 x i32> %37, zeroinitializer
  %39 = sub nsw <4 x i32> zeroinitializer, %37
  %40 = select <4 x i1> %38, <4 x i32> %39, <4 x i32> %37
  %cmp12.1 = icmp slt i32 undef, %spec.select8
  %spec.select8.1 = select i1 %cmp12.1, i32 undef, i32 %spec.select8
  %cmp12.2 = icmp slt i32 undef, %spec.select8.1
  %spec.select8.2 = select i1 %cmp12.2, i32 undef, i32 %spec.select8.1
  %cmp12.3 = icmp slt i32 undef, %spec.select8.2
  %spec.select8.3 = select i1 %cmp12.3, i32 undef, i32 %spec.select8.2
  %cmp12.118 = icmp slt i32 undef, %spec.select8.3
  %rdx.shuf = shufflevector <4 x i32> %40, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %rdx.minmax.cmp = icmp slt <4 x i32> %40, %rdx.shuf
  %rdx.minmax.select = select <4 x i1> %rdx.minmax.cmp, <4 x i32> %40, <4 x i32> %rdx.shuf
  %rdx.shuf1 = shufflevector <4 x i32> %rdx.minmax.select, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %rdx.minmax.cmp2 = icmp slt <4 x i32> %rdx.minmax.select, %rdx.shuf1
  %rdx.minmax.select3 = select <4 x i1> %rdx.minmax.cmp2, <4 x i32> %rdx.minmax.select, <4 x i32> %rdx.shuf1
  %41 = extractelement <4 x i32> %rdx.minmax.select3, i32 0
  %42 = icmp slt i32 %41, %32
  %43 = select i1 %42, i32 %41, i32 %32
  %44 = icmp slt i32 %43, %b.0
  %op.extra = select i1 %44, i32 %43, i32 %b.0
  %spec.select8.120 = select i1 %cmp12.118, i32 undef, i32 %spec.select8.3
  %sub.1.1 = sub i32 %30, %2
  %45 = icmp slt i32 %sub.1.1, 0
  %neg.1.1 = sub nsw i32 0, %sub.1.1
  %46 = select i1 %45, i32 %neg.1.1, i32 %sub.1.1
  %cmp12.1.1 = icmp slt i32 %46, %op.extra
  %narrow = or i1 %cmp12.1.1, %cmp12.118
  %spec.select8.1.1 = select i1 %cmp12.1.1, i32 %46, i32 %op.extra
  %sub.2.1 = sub i32 %30, %3
  %47 = icmp slt i32 %sub.2.1, 0
  %neg.2.1 = sub nsw i32 0, %sub.2.1
  %48 = select i1 %47, i32 %neg.2.1, i32 %sub.2.1
  %cmp12.2.1 = icmp slt i32 %48, %spec.select8.1.1
  %narrow34 = or i1 %cmp12.2.1, %narrow
  %spec.select8.2.1 = select i1 %cmp12.2.1, i32 %48, i32 %spec.select8.1.1
  %sub.3.1 = sub i32 %30, %4
  %49 = icmp slt i32 %sub.3.1, 0
  %neg.3.1 = sub nsw i32 0, %sub.3.1
  %50 = select i1 %49, i32 %neg.3.1, i32 %sub.3.1
  %cmp12.3.1 = icmp slt i32 %50, %spec.select8.2.1
  %narrow35 = or i1 %cmp12.3.1, %narrow34
  %spec.select.3.1 = zext i1 %narrow35 to i32
  %spec.select8.3.1 = select i1 %cmp12.3.1, i32 %50, i32 %spec.select8.2.1
  %sub.222 = sub i32 %30, %5
  %51 = icmp slt i32 %sub.222, 0
  %neg.223 = sub nsw i32 0, %sub.222
  %52 = select i1 %51, i32 %neg.223, i32 %sub.222
  %cmp12.224 = icmp slt i32 %52, %spec.select8.3.1
  %spec.select8.226 = select i1 %cmp12.224, i32 %52, i32 %spec.select8.3.1
  %sub.1.2 = sub i32 %30, %6
  %53 = icmp slt i32 %sub.1.2, 0
  %neg.1.2 = sub nsw i32 0, %sub.1.2
  %54 = select i1 %53, i32 %neg.1.2, i32 %sub.1.2
  %cmp12.1.2 = icmp slt i32 %54, %spec.select8.226
  %55 = or i1 %cmp12.1.2, %cmp12.224
  %spec.select8.1.2 = select i1 %cmp12.1.2, i32 %54, i32 %spec.select8.226
  %sub.2.2 = sub i32 %30, %7
  %56 = icmp slt i32 %sub.2.2, 0
  %neg.2.2 = sub nsw i32 0, %sub.2.2
  %57 = select i1 %56, i32 %neg.2.2, i32 %sub.2.2
  %cmp12.2.2 = icmp slt i32 %57, %spec.select8.1.2
  %58 = or i1 %cmp12.2.2, %55
  %spec.select8.2.2 = select i1 %cmp12.2.2, i32 %57, i32 %spec.select8.1.2
  %sub.3.2 = sub i32 %30, %8
  %59 = icmp slt i32 %sub.3.2, 0
  %neg.3.2 = sub nsw i32 0, %sub.3.2
  %60 = select i1 %59, i32 %neg.3.2, i32 %sub.3.2
  %cmp12.3.2 = icmp slt i32 %60, %spec.select8.2.2
  %61 = or i1 %cmp12.3.2, %58
  %spec.select.3.2 = select i1 %61, i32 2, i32 %spec.select.3.1
  %spec.select8.3.2 = select i1 %cmp12.3.2, i32 %60, i32 %spec.select8.2.2
  %sub.328 = sub i32 %30, %9
  %62 = icmp slt i32 %sub.328, 0
  %neg.329 = sub nsw i32 0, %sub.328
  %63 = select i1 %62, i32 %neg.329, i32 %sub.328
  %cmp12.330 = icmp slt i32 %63, %spec.select8.3.2
  %spec.select8.332 = select i1 %cmp12.330, i32 %63, i32 %spec.select8.3.2
  %sub.1.3 = sub i32 %30, %10
  %64 = icmp slt i32 %sub.1.3, 0
  %neg.1.3 = sub nsw i32 0, %sub.1.3
  %65 = select i1 %64, i32 %neg.1.3, i32 %sub.1.3
  %cmp12.1.3 = icmp slt i32 %65, %spec.select8.332
  %66 = or i1 %cmp12.1.3, %cmp12.330
  %spec.select8.1.3 = select i1 %cmp12.1.3, i32 %65, i32 %spec.select8.332
  %sub.2.3 = sub i32 %30, %11
  %67 = icmp slt i32 %sub.2.3, 0
  %neg.2.3 = sub nsw i32 0, %sub.2.3
  %68 = select i1 %67, i32 %neg.2.3, i32 %sub.2.3
  %cmp12.2.3 = icmp slt i32 %68, %spec.select8.1.3
  %69 = or i1 %cmp12.2.3, %66
  %spec.select8.2.3 = select i1 %cmp12.2.3, i32 %68, i32 %spec.select8.1.3
  %sub.3.3 = sub i32 %30, %12
  %70 = icmp slt i32 %sub.3.3, 0
  %neg.3.3 = sub nsw i32 0, %sub.3.3
  %71 = select i1 %70, i32 %neg.3.3, i32 %sub.3.3
  %cmp12.3.3 = icmp slt i32 %71, %spec.select8.2.3
  %72 = or i1 %cmp12.3.3, %69
  %spec.select.3.3 = select i1 %72, i32 3, i32 %spec.select.3.2
  %spec.select8.3.3 = select i1 %cmp12.3.3, i32 %71, i32 %spec.select8.2.3
  %sub.4 = sub i32 %30, %13
  %73 = icmp slt i32 %sub.4, 0
  %neg.4 = sub nsw i32 0, %sub.4
  %74 = select i1 %73, i32 %neg.4, i32 %sub.4
  %cmp12.4 = icmp slt i32 %74, %spec.select8.3.3
  %spec.select8.4 = select i1 %cmp12.4, i32 %74, i32 %spec.select8.3.3
  %sub.1.4 = sub i32 %30, %14
  %75 = icmp slt i32 %sub.1.4, 0
  %neg.1.4 = sub nsw i32 0, %sub.1.4
  %76 = select i1 %75, i32 %neg.1.4, i32 %sub.1.4
  %cmp12.1.4 = icmp slt i32 %76, %spec.select8.4
  %77 = or i1 %cmp12.1.4, %cmp12.4
  %spec.select8.1.4 = select i1 %cmp12.1.4, i32 %76, i32 %spec.select8.4
  %sub.2.4 = sub i32 %30, %15
  %78 = icmp slt i32 %sub.2.4, 0
  %neg.2.4 = sub nsw i32 0, %sub.2.4
  %79 = select i1 %78, i32 %neg.2.4, i32 %sub.2.4
  %cmp12.2.4 = icmp slt i32 %79, %spec.select8.1.4
  %80 = or i1 %cmp12.2.4, %77
  %spec.select8.2.4 = select i1 %cmp12.2.4, i32 %79, i32 %spec.select8.1.4
  %sub.3.4 = sub i32 %30, %16
  %81 = icmp slt i32 %sub.3.4, 0
  %neg.3.4 = sub nsw i32 0, %sub.3.4
  %82 = select i1 %81, i32 %neg.3.4, i32 %sub.3.4
  %cmp12.3.4 = icmp slt i32 %82, %spec.select8.2.4
  %83 = or i1 %cmp12.3.4, %80
  %spec.select.3.4 = select i1 %83, i32 4, i32 %spec.select.3.3
  %spec.select8.3.4 = select i1 %cmp12.3.4, i32 %82, i32 %spec.select8.2.4
  %sub.5 = sub i32 %30, %17
  %84 = icmp slt i32 %sub.5, 0
  %neg.5 = sub nsw i32 0, %sub.5
  %85 = select i1 %84, i32 %neg.5, i32 %sub.5
  %cmp12.5 = icmp slt i32 %85, %spec.select8.3.4
  %spec.select8.5 = select i1 %cmp12.5, i32 %85, i32 %spec.select8.3.4
  %sub.1.5 = sub i32 %30, %18
  %86 = icmp slt i32 %sub.1.5, 0
  %neg.1.5 = sub nsw i32 0, %sub.1.5
  %87 = select i1 %86, i32 %neg.1.5, i32 %sub.1.5
  %cmp12.1.5 = icmp slt i32 %87, %spec.select8.5
  %88 = or i1 %cmp12.1.5, %cmp12.5
  %spec.select8.1.5 = select i1 %cmp12.1.5, i32 %87, i32 %spec.select8.5
  %sub.2.5 = sub i32 %30, %19
  %89 = icmp slt i32 %sub.2.5, 0
  %neg.2.5 = sub nsw i32 0, %sub.2.5
  %90 = select i1 %89, i32 %neg.2.5, i32 %sub.2.5
  %cmp12.2.5 = icmp slt i32 %90, %spec.select8.1.5
  %91 = or i1 %cmp12.2.5, %88
  %spec.select8.2.5 = select i1 %cmp12.2.5, i32 %90, i32 %spec.select8.1.5
  %sub.3.5 = sub i32 %30, %20
  %92 = icmp slt i32 %sub.3.5, 0
  %neg.3.5 = sub nsw i32 0, %sub.3.5
  %93 = select i1 %92, i32 %neg.3.5, i32 %sub.3.5
  %cmp12.3.5 = icmp slt i32 %93, %spec.select8.2.5
  %94 = or i1 %cmp12.3.5, %91
  %spec.select.3.5 = select i1 %94, i32 5, i32 %spec.select.3.4
  %spec.select8.3.5 = select i1 %cmp12.3.5, i32 %93, i32 %spec.select8.2.5
  %sub.6 = sub i32 %30, %21
  %95 = icmp slt i32 %sub.6, 0
  %neg.6 = sub nsw i32 0, %sub.6
  %96 = select i1 %95, i32 %neg.6, i32 %sub.6
  %cmp12.6 = icmp slt i32 %96, %spec.select8.3.5
  %spec.select8.6 = select i1 %cmp12.6, i32 %96, i32 %spec.select8.3.5
  %sub.1.6 = sub i32 %30, %22
  %97 = icmp slt i32 %sub.1.6, 0
  %neg.1.6 = sub nsw i32 0, %sub.1.6
  %98 = select i1 %97, i32 %neg.1.6, i32 %sub.1.6
  %cmp12.1.6 = icmp slt i32 %98, %spec.select8.6
  %99 = or i1 %cmp12.1.6, %cmp12.6
  %spec.select8.1.6 = select i1 %cmp12.1.6, i32 %98, i32 %spec.select8.6
  %sub.2.6 = sub i32 %30, %23
  %100 = icmp slt i32 %sub.2.6, 0
  %neg.2.6 = sub nsw i32 0, %sub.2.6
  %101 = select i1 %100, i32 %neg.2.6, i32 %sub.2.6
  %cmp12.2.6 = icmp slt i32 %101, %spec.select8.1.6
  %102 = or i1 %cmp12.2.6, %99
  %spec.select8.2.6 = select i1 %cmp12.2.6, i32 %101, i32 %spec.select8.1.6
  %sub.3.6 = sub i32 %30, %24
  %103 = icmp slt i32 %sub.3.6, 0
  %neg.3.6 = sub nsw i32 0, %sub.3.6
  %104 = select i1 %103, i32 %neg.3.6, i32 %sub.3.6
  %cmp12.3.6 = icmp slt i32 %104, %spec.select8.2.6
  %105 = or i1 %cmp12.3.6, %102
  %spec.select.3.6 = select i1 %105, i32 6, i32 %spec.select.3.5
  %spec.select8.3.6 = select i1 %cmp12.3.6, i32 %104, i32 %spec.select8.2.6
  %sub.7 = sub i32 %30, %25
  %106 = icmp slt i32 %sub.7, 0
  %neg.7 = sub nsw i32 0, %sub.7
  %107 = select i1 %106, i32 %neg.7, i32 %sub.7
  %cmp12.7 = icmp slt i32 %107, %spec.select8.3.6
  %spec.select8.7 = select i1 %cmp12.7, i32 %107, i32 %spec.select8.3.6
  %sub.1.7 = sub i32 %30, %26
  %108 = icmp slt i32 %sub.1.7, 0
  %neg.1.7 = sub nsw i32 0, %sub.1.7
  %109 = select i1 %108, i32 %neg.1.7, i32 %sub.1.7
  %cmp12.1.7 = icmp slt i32 %109, %spec.select8.7
  %110 = or i1 %cmp12.1.7, %cmp12.7
  %spec.select8.1.7 = select i1 %cmp12.1.7, i32 %109, i32 %spec.select8.7
  %sub.2.7 = sub i32 %30, %27
  %111 = icmp slt i32 %sub.2.7, 0
  %neg.2.7 = sub nsw i32 0, %sub.2.7
  %112 = select i1 %111, i32 %neg.2.7, i32 %sub.2.7
  %cmp12.2.7 = icmp slt i32 %112, %spec.select8.1.7
  %113 = or i1 %cmp12.2.7, %110
  %spec.select8.2.7 = select i1 %cmp12.2.7, i32 %112, i32 %spec.select8.1.7
  %sub.3.7 = sub i32 %30, %28
  %114 = icmp slt i32 %sub.3.7, 0
  %neg.3.7 = sub nsw i32 0, %sub.3.7
  %115 = select i1 %114, i32 %neg.3.7, i32 %sub.3.7
  %cmp12.3.7 = icmp slt i32 %115, %spec.select8.2.7
  %116 = or i1 %cmp12.3.7, %113
  %spec.select.3.7 = select i1 %116, i32 7, i32 %spec.select.3.6
  %spec.select8.3.7 = select i1 %cmp12.3.7, i32 %115, i32 %spec.select8.2.7
  %k = getelementptr inbounds [366 x i32], [366 x i32]* @l, i64 0, i64 %indvars.iv
  store i32 %spec.select.3.7, i32* %k, align 4
  %indvars.iv.next = add i64 %indvars.iv, 1
  br label %for.cond
}

attributes #0 = { "target-cpu"="haswell" }
