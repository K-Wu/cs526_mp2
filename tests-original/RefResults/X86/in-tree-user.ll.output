; ModuleID = '<stdin>'
source_filename = "<stdin>"
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.8.0"

@.str = private unnamed_addr constant [6 x i8] c"bingo\00", align 1

define void @in_tree_user(double* nocapture %A, i32 %n) #0 {
entry:
  %conv = sitofp i32 %n to double
  %0 = insertelement <2 x double> undef, double %conv, i32 0
  %1 = insertelement <2 x double> %0, double %conv, i32 1
  br label %for.body

for.body:                                         ; preds = %for.inc, %entry
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.inc ]
  %2 = shl nsw i64 %indvars.iv, 1
  %arrayidx = getelementptr inbounds double, double* %A, i64 %2
  %3 = bitcast double* %arrayidx to <2 x double>*
  %4 = load <2 x double>, <2 x double>* %3, align 8
  %5 = fmul <2 x double> %1, %4
  %6 = fmul <2 x double> <double 7.000000e+00, double 4.000000e+00>, %5
  %7 = fadd <2 x double> <double 5.000000e+00, double 9.000000e+00>, %6
  %8 = extractelement <2 x double> %7, i32 0
  %InTreeUser = fadd double %8, %8
  %9 = extractelement <2 x double> %7, i32 1
  %cmp11 = fcmp ogt double %8, %9
  br i1 %cmp11, label %if.then, label %for.inc

if.then:                                          ; preds = %for.body
  %call = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0))
  br label %for.inc

for.inc:                                          ; preds = %if.then, %for.body
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, 100
  br i1 %exitcond, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  store double %InTreeUser, double* %A, align 8
  ret void
}

declare i32 @printf(i8* nocapture, ...) #0

attributes #0 = { "target-cpu"="corei7-avx" }
