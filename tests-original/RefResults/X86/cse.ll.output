; ModuleID = '<stdin>'
source_filename = "<stdin>"
target datalayout = "e-p:32:32:32-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:32:64-f32:32:32-f64:32:64-v64:64:64-v128:128:128-a0:0:64-f80:128:128-n8:16:32-S128"
target triple = "i386-apple-macosx10.8.0"

%class.B.53.55 = type { %class.A.52.54, double }
%class.A.52.54 = type { double, double, double }

@a = external global double, align 8

define i32 @test(double* nocapture %G) #0 {
entry:
  %arrayidx = getelementptr inbounds double, double* %G, i64 5
  %arrayidx2 = getelementptr inbounds double, double* %G, i64 6
  %0 = bitcast double* %arrayidx to <2 x double>*
  %1 = load <2 x double>, <2 x double>* %0, align 8
  %2 = fmul <2 x double> <double 4.000000e+00, double 3.000000e+00>, %1
  %3 = fadd <2 x double> <double 1.000000e+00, double 6.000000e+00>, %2
  %arrayidx5 = getelementptr inbounds double, double* %G, i64 1
  %4 = bitcast double* %G to <2 x double>*
  store <2 x double> %3, <2 x double>* %4, align 8
  %5 = extractelement <2 x double> %2, i32 0
  %add8 = fadd double %5, 7.000000e+00
  %arrayidx9 = getelementptr inbounds double, double* %G, i64 2
  store double %add8, double* %arrayidx9, align 8
  %6 = extractelement <2 x double> %1, i32 1
  %mul11 = fmul double %6, 4.000000e+00
  %add12 = fadd double %mul11, 8.000000e+00
  %arrayidx13 = getelementptr inbounds double, double* %G, i64 3
  store double %add12, double* %arrayidx13, align 8
  ret i32 undef
}

define i32 @foo(double* nocapture %A, i32 %n) #0 {
entry:
  %conv = sitofp i32 %n to double
  %arrayidx3 = getelementptr inbounds double, double* %A, i64 1
  %arrayidx9 = getelementptr inbounds double, double* %A, i64 2
  %arrayidx15 = getelementptr inbounds double, double* %A, i64 3
  %0 = bitcast double* %A to <4 x double>*
  %1 = load <4 x double>, <4 x double>* %0, align 8
  %2 = fmul <4 x double> <double 7.900000e+00, double 7.700000e+00, double 7.600000e+00, double 7.400000e+00>, %1
  %3 = insertelement <4 x double> undef, double %conv, i32 0
  %4 = insertelement <4 x double> %3, double %conv, i32 1
  %5 = insertelement <4 x double> %4, double %conv, i32 2
  %6 = insertelement <4 x double> %5, double %conv, i32 3
  %7 = fmul <4 x double> %6, %2
  %8 = fadd <4 x double> <double 6.000000e+00, double 2.000000e+00, double 3.000000e+00, double 4.000000e+00>, %7
  %9 = bitcast double* %A to <4 x double>*
  store <4 x double> %8, <4 x double>* %9, align 8
  ret i32 undef
}

define i32 @test2(double* nocapture %G, i32 %k) #0 {
  %1 = icmp eq i32 %k, 0
  %2 = getelementptr inbounds double, double* %G, i64 5
  %3 = load double, double* %2, align 8
  %4 = fmul double %3, 4.000000e+00
  br i1 %1, label %14, label %5

; <label>:5:                                      ; preds = %0
  %6 = getelementptr inbounds double, double* %G, i64 6
  %7 = load double, double* %6, align 8
  %8 = fmul double %7, 3.000000e+00
  %9 = insertelement <2 x double> undef, double %4, i32 0
  %10 = insertelement <2 x double> %9, double %8, i32 1
  %11 = fadd <2 x double> <double 1.000000e+00, double 6.000000e+00>, %10
  %12 = getelementptr inbounds double, double* %G, i64 1
  %13 = bitcast double* %G to <2 x double>*
  store <2 x double> %11, <2 x double>* %13, align 8
  br label %24

; <label>:14:                                     ; preds = %0
  %15 = getelementptr inbounds double, double* %G, i64 2
  %16 = getelementptr inbounds double, double* %G, i64 6
  %17 = load double, double* %16, align 8
  %18 = fmul double %17, 3.000000e+00
  %19 = insertelement <2 x double> undef, double %4, i32 0
  %20 = insertelement <2 x double> %19, double %18, i32 1
  %21 = fadd <2 x double> <double 7.000000e+00, double 8.000000e+00>, %20
  %22 = getelementptr inbounds double, double* %G, i64 3
  %23 = bitcast double* %15 to <2 x double>*
  store <2 x double> %21, <2 x double>* %23, align 8
  br label %24

; <label>:24:                                     ; preds = %14, %5
  ret i32 undef
}

define i32 @foo4(double* nocapture %A, i32 %n) #0 {
entry:
  %conv = sitofp i32 %n to double
  %arrayidx3 = getelementptr inbounds double, double* %A, i64 1
  %arrayidx9 = getelementptr inbounds double, double* %A, i64 2
  %arrayidx15 = getelementptr inbounds double, double* %A, i64 3
  %0 = bitcast double* %A to <4 x double>*
  %1 = load <4 x double>, <4 x double>* %0, align 8
  %2 = fmul <4 x double> <double 7.900000e+00, double 7.900000e+00, double 7.900000e+00, double 7.900000e+00>, %1
  %3 = insertelement <4 x double> undef, double %conv, i32 0
  %4 = insertelement <4 x double> %3, double %conv, i32 1
  %5 = insertelement <4 x double> %4, double %conv, i32 2
  %6 = insertelement <4 x double> %5, double %conv, i32 3
  %7 = fmul <4 x double> %6, %2
  %8 = fadd <4 x double> <double 6.000000e+00, double 6.000000e+00, double 6.000000e+00, double 6.000000e+00>, %7
  %9 = bitcast double* %A to <4 x double>*
  store <4 x double> %8, <4 x double>* %9, align 8
  ret i32 undef
}

define i32 @partial_mrg(double* nocapture %A, i32 %n) #0 {
entry:
  %conv = sitofp i32 %n to double
  %arrayidx2 = getelementptr inbounds double, double* %A, i64 1
  %0 = bitcast double* %A to <2 x double>*
  %1 = load <2 x double>, <2 x double>* %0, align 8
  %2 = insertelement <2 x double> undef, double %conv, i32 0
  %3 = insertelement <2 x double> %2, double %conv, i32 1
  %4 = fmul <2 x double> %3, %1
  %5 = bitcast double* %A to <2 x double>*
  store <2 x double> %4, <2 x double>* %5, align 8
  %cmp = icmp slt i32 %n, 4
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %arrayidx7 = getelementptr inbounds double, double* %A, i64 2
  %arrayidx11 = getelementptr inbounds double, double* %A, i64 3
  %6 = bitcast double* %arrayidx7 to <2 x double>*
  %7 = load <2 x double>, <2 x double>* %6, align 8
  %add = add nsw i32 %n, 4
  %conv12 = sitofp i32 %add to double
  %8 = insertelement <2 x double> %2, double %conv12, i32 1
  %9 = fmul <2 x double> %8, %7
  %10 = bitcast double* %arrayidx7 to <2 x double>*
  store <2 x double> %9, <2 x double>* %10, align 8
  br label %return

return:                                           ; preds = %if.end, %entry
  ret i32 0
}

define void @PR19646(%class.B.53.55* %this) #0 {
entry:
  br i1 undef, label %if.end13, label %if.end13

sw.epilog7:                                       ; No predecessors!
  %.in = getelementptr inbounds %class.B.53.55, %class.B.53.55* %this, i64 0, i32 0, i32 1
  %0 = load double, double* %.in, align 8
  %add = fadd double undef, 0.000000e+00
  %add6 = fadd double %add, %0
  %1 = load double, double* @a, align 8
  %add8 = fadd double %1, 0.000000e+00
  %_dy = getelementptr inbounds %class.B.53.55, %class.B.53.55* %this, i64 0, i32 0, i32 2
  %2 = load double, double* %_dy, align 8
  %add10 = fadd double %add8, %2
  br i1 undef, label %if.then12, label %if.end13

if.then12:                                        ; preds = %sw.epilog7
  %3 = load double, double* undef, align 8
  br label %if.end13

if.end13:                                         ; preds = %if.then12, %sw.epilog7, %entry, %entry
  %x.1 = phi double [ 0.000000e+00, %if.then12 ], [ %add6, %sw.epilog7 ], [ undef, %entry ], [ undef, %entry ]
  %b.0 = phi double [ %3, %if.then12 ], [ %add10, %sw.epilog7 ], [ undef, %entry ], [ undef, %entry ]
  unreachable
}

attributes #0 = { "target-cpu"="corei7-avx" }
