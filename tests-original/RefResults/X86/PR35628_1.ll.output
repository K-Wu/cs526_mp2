; ModuleID = '<stdin>'
source_filename = "<stdin>"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128-ni:1"
target triple = "x86_64-unknown-linux-gnu"

define void @mainTest(i32* %ptr) #0 {
entry:
  %cmp = icmp eq i32* %ptr, null
  br i1 %cmp, label %loop, label %bail_out

loop:                                             ; preds = %loop, %entry
  %dummy_phi = phi i32 [ 1, %entry ], [ %op.extra5, %loop ]
  %0 = getelementptr inbounds i32, i32* %ptr, i64 1
  %1 = getelementptr inbounds i32, i32* %ptr, i64 2
  %2 = getelementptr inbounds i32, i32* %ptr, i64 3
  %3 = bitcast i32* %ptr to <4 x i32>*
  %4 = load <4 x i32>, <4 x i32>* %3, align 4
  %5 = extractelement <4 x i32> %4, i32 3
  %6 = extractelement <4 x i32> %4, i32 2
  %7 = extractelement <4 x i32> %4, i32 1
  %8 = mul <4 x i32> %4, %4
  %9 = add i32 1, undef
  %10 = add i32 %9, %7
  %11 = add i32 %10, undef
  %12 = add i32 %11, %6
  %13 = add i32 %12, undef
  %14 = sext i32 %6 to i64
  %15 = add i32 %13, %5
  %rdx.shuf = shufflevector <4 x i32> %8, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %bin.rdx = add <4 x i32> %8, %rdx.shuf
  %rdx.shuf1 = shufflevector <4 x i32> %bin.rdx, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %bin.rdx2 = add <4 x i32> %bin.rdx, %rdx.shuf1
  %16 = extractelement <4 x i32> %bin.rdx2, i32 0
  %op.extra = add i32 %16, 1
  %op.extra3 = add i32 %op.extra, %7
  %op.extra4 = add i32 %op.extra3, %6
  %op.extra5 = add i32 %op.extra4, %5
  %17 = add i32 %15, undef
  br label %loop

bail_out:                                         ; preds = %entry
  ret void
}

attributes #0 = { "target-cpu"="westmere" }
