; ModuleID = '<stdin>'
source_filename = "<stdin>"
target triple = "x86_64-unknown-linux-gnu"

%"struct.std::h.0.4.8.12.16.20.24.28.248.0.1.2.3.76" = type { i32, i32 }

define void @_Z2azv() local_unnamed_addr #0 {
for.body.lr.ph:
  %.sroa_cast.4 = getelementptr inbounds %"struct.std::h.0.4.8.12.16.20.24.28.248.0.1.2.3.76", %"struct.std::h.0.4.8.12.16.20.24.28.248.0.1.2.3.76"* undef, i64 4, i32 0
  %.sroa_raw_idx.4 = getelementptr inbounds %"struct.std::h.0.4.8.12.16.20.24.28.248.0.1.2.3.76", %"struct.std::h.0.4.8.12.16.20.24.28.248.0.1.2.3.76"* undef, i64 4, i32 1
  %.sroa_cast.5 = getelementptr inbounds %"struct.std::h.0.4.8.12.16.20.24.28.248.0.1.2.3.76", %"struct.std::h.0.4.8.12.16.20.24.28.248.0.1.2.3.76"* undef, i64 5, i32 0
  %.sroa_raw_idx.5 = getelementptr inbounds %"struct.std::h.0.4.8.12.16.20.24.28.248.0.1.2.3.76", %"struct.std::h.0.4.8.12.16.20.24.28.248.0.1.2.3.76"* undef, i64 5, i32 1
  %.sroa_cast.6 = getelementptr inbounds %"struct.std::h.0.4.8.12.16.20.24.28.248.0.1.2.3.76", %"struct.std::h.0.4.8.12.16.20.24.28.248.0.1.2.3.76"* undef, i64 6, i32 0
  %.sroa_raw_idx.6 = getelementptr inbounds %"struct.std::h.0.4.8.12.16.20.24.28.248.0.1.2.3.76", %"struct.std::h.0.4.8.12.16.20.24.28.248.0.1.2.3.76"* undef, i64 6, i32 1
  %.sroa_cast.7 = getelementptr inbounds %"struct.std::h.0.4.8.12.16.20.24.28.248.0.1.2.3.76", %"struct.std::h.0.4.8.12.16.20.24.28.248.0.1.2.3.76"* undef, i64 7, i32 0
  %.sroa_raw_idx.7 = getelementptr inbounds %"struct.std::h.0.4.8.12.16.20.24.28.248.0.1.2.3.76", %"struct.std::h.0.4.8.12.16.20.24.28.248.0.1.2.3.76"* undef, i64 7, i32 1
  %0 = bitcast i32* %.sroa_cast.4 to <8 x i32>*
  %1 = load <8 x i32>, <8 x i32>* %0, align 4
  %cmp.i1.4 = icmp slt i32 undef, undef
  %.sroa.speculated.4 = select i1 %cmp.i1.4, i32 undef, i32 undef
  %cmp.i1.5 = icmp slt i32 %.sroa.speculated.4, undef
  %.sroa.speculated.5 = select i1 %cmp.i1.5, i32 undef, i32 %.sroa.speculated.4
  %cmp.i1.6 = icmp slt i32 %.sroa.speculated.5, undef
  %.sroa.speculated.6 = select i1 %cmp.i1.6, i32 undef, i32 %.sroa.speculated.5
  %cmp.i1.7 = icmp slt i32 %.sroa.speculated.6, undef
  %.sroa.speculated.7 = select i1 %cmp.i1.7, i32 undef, i32 %.sroa.speculated.6
  %cmp.i1.8 = icmp slt i32 undef, undef
  %rdx.shuf = shufflevector <8 x i32> %1, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %rdx.minmax.cmp = icmp sgt <8 x i32> %1, %rdx.shuf
  %rdx.minmax.select = select <8 x i1> %rdx.minmax.cmp, <8 x i32> %1, <8 x i32> %rdx.shuf
  %rdx.shuf1 = shufflevector <8 x i32> %rdx.minmax.select, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %rdx.minmax.cmp2 = icmp sgt <8 x i32> %rdx.minmax.select, %rdx.shuf1
  %rdx.minmax.select3 = select <8 x i1> %rdx.minmax.cmp2, <8 x i32> %rdx.minmax.select, <8 x i32> %rdx.shuf1
  %rdx.shuf4 = shufflevector <8 x i32> %rdx.minmax.select3, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %rdx.minmax.cmp5 = icmp sgt <8 x i32> %rdx.minmax.select3, %rdx.shuf4
  %rdx.minmax.select6 = select <8 x i1> %rdx.minmax.cmp5, <8 x i32> %rdx.minmax.select3, <8 x i32> %rdx.shuf4
  %2 = extractelement <8 x i32> %rdx.minmax.select6, i32 0
  %3 = icmp sgt i32 %2, undef
  %op.extra = select i1 %3, i32 %2, i32 undef
  %4 = icmp sgt i32 %op.extra, undef
  %op.extra7 = select i1 %4, i32 %op.extra, i32 undef
  %.sroa.speculated.8 = select i1 %cmp.i1.8, i32 undef, i32 undef
  %.sroa.speculated.9 = select i1 undef, i32 undef, i32 %op.extra7
  %cmp.i1.10 = icmp slt i32 %.sroa.speculated.9, undef
  ret void
}

attributes #0 = { "target-cpu"="bdver2" }
