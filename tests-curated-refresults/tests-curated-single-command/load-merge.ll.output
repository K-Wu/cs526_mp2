; ModuleID = '<stdin>'
source_filename = "<stdin>"
target triple = "x86_64-apple-macosx"

define i32 @_Z9load_le32Ph(i8* nocapture readonly %data) #0 {
entry:
  %0 = load i8, i8* %data, align 1
  %conv = zext i8 %0 to i32
  %arrayidx1 = getelementptr inbounds i8, i8* %data, i64 1
  %1 = load i8, i8* %arrayidx1, align 1
  %conv2 = zext i8 %1 to i32
  %shl3 = shl nuw nsw i32 %conv2, 8
  %or = or i32 %shl3, %conv
  %arrayidx4 = getelementptr inbounds i8, i8* %data, i64 2
  %2 = load i8, i8* %arrayidx4, align 1
  %conv5 = zext i8 %2 to i32
  %shl6 = shl nuw nsw i32 %conv5, 16
  %or7 = or i32 %or, %shl6
  %arrayidx8 = getelementptr inbounds i8, i8* %data, i64 3
  %3 = load i8, i8* %arrayidx8, align 1
  %conv9 = zext i8 %3 to i32
  %shl10 = shl nuw i32 %conv9, 24
  %or11 = or i32 %or7, %shl10
  ret i32 %or11
}

define <4 x float> @PR16739_byref(<4 x float>* nocapture readonly dereferenceable(16) %x) #0 {
  %gep0 = getelementptr inbounds <4 x float>, <4 x float>* %x, i64 0, i64 0
  %gep1 = getelementptr inbounds <4 x float>, <4 x float>* %x, i64 0, i64 1
  %gep2 = getelementptr inbounds <4 x float>, <4 x float>* %x, i64 0, i64 2
  %1 = bitcast float* %gep0 to <2 x float>*
  %2 = load <2 x float>, <2 x float>* %1, align 4
  %x2 = load float, float* %gep2
  %3 = extractelement <2 x float> %2, i32 0
  %i0 = insertelement <4 x float> undef, float %3, i32 0
  %4 = extractelement <2 x float> %2, i32 1
  %i1 = insertelement <4 x float> %i0, float %4, i32 1
  %i2 = insertelement <4 x float> %i1, float %x2, i32 2
  %i3 = insertelement <4 x float> %i2, float %x2, i32 3
  ret <4 x float> %i3
}

define <4 x float> @PR16739_byref_alt(<4 x float>* nocapture readonly dereferenceable(16) %x) #0 {
  %gep0 = getelementptr inbounds <4 x float>, <4 x float>* %x, i64 0, i64 0
  %gep1 = getelementptr inbounds <4 x float>, <4 x float>* %x, i64 0, i64 1
  %1 = bitcast float* %gep0 to <2 x float>*
  %2 = load <2 x float>, <2 x float>* %1, align 4
  %shuffle = shufflevector <2 x float> %2, <2 x float> undef, <4 x i32> <i32 0, i32 0, i32 1, i32 1>
  %3 = extractelement <4 x float> %shuffle, i32 0
  %i0 = insertelement <4 x float> undef, float %3, i32 0
  %i1 = insertelement <4 x float> %i0, float %3, i32 1
  %4 = extractelement <4 x float> %shuffle, i32 2
  %i2 = insertelement <4 x float> %i1, float %4, i32 2
  %i3 = insertelement <4 x float> %i2, float %4, i32 3
  ret <4 x float> %i3
}

define <4 x float> @PR16739_byval(<4 x float>* nocapture readonly dereferenceable(16) %x) #0 {
  %t0 = bitcast <4 x float>* %x to i64*
  %t1 = load i64, i64* %t0, align 16
  %t2 = getelementptr inbounds <4 x float>, <4 x float>* %x, i64 0, i64 2
  %t3 = bitcast float* %t2 to i64*
  %t4 = load i64, i64* %t3, align 8
  %t5 = trunc i64 %t1 to i32
  %t6 = bitcast i32 %t5 to float
  %t7 = insertelement <4 x float> undef, float %t6, i32 0
  %t8 = lshr i64 %t1, 32
  %t9 = trunc i64 %t8 to i32
  %t10 = bitcast i32 %t9 to float
  %t11 = insertelement <4 x float> %t7, float %t10, i32 1
  %t12 = trunc i64 %t4 to i32
  %t13 = bitcast i32 %t12 to float
  %t14 = insertelement <4 x float> %t11, float %t13, i32 2
  %t15 = insertelement <4 x float> %t14, float %t13, i32 3
  ret <4 x float> %t15
}

define void @PR43578_prefer128(i32* %r, i64* %p, i64* %q) #1 {
  %p0 = getelementptr inbounds i64, i64* %p, i64 0
  %p1 = getelementptr inbounds i64, i64* %p, i64 1
  %p2 = getelementptr inbounds i64, i64* %p, i64 2
  %p3 = getelementptr inbounds i64, i64* %p, i64 3
  %q0 = getelementptr inbounds i64, i64* %q, i64 0
  %q1 = getelementptr inbounds i64, i64* %q, i64 1
  %q2 = getelementptr inbounds i64, i64* %q, i64 2
  %q3 = getelementptr inbounds i64, i64* %q, i64 3
  %1 = bitcast i64* %p0 to <4 x i64>*
  %2 = load <4 x i64>, <4 x i64>* %1, align 2
  %3 = bitcast i64* %q0 to <4 x i64>*
  %4 = load <4 x i64>, <4 x i64>* %3, align 2
  %5 = sub nsw <4 x i64> %2, %4
  %6 = extractelement <4 x i64> %5, i32 0
  %g0 = getelementptr inbounds i32, i32* %r, i64 %6
  %7 = extractelement <4 x i64> %5, i32 1
  %g1 = getelementptr inbounds i32, i32* %r, i64 %7
  %8 = extractelement <4 x i64> %5, i32 2
  %g2 = getelementptr inbounds i32, i32* %r, i64 %8
  %9 = extractelement <4 x i64> %5, i32 3
  %g3 = getelementptr inbounds i32, i32* %r, i64 %9
  ret void
}

attributes #0 = { "target-cpu"="haswell" }
attributes #1 = { "prefer-vector-width"="128" "target-cpu"="haswell" }
